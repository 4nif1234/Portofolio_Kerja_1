{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"mount_file_id":"13ZRNzFdfQGGdkjqy753tsXScYRKTkWr6","authorship_tag":"ABX9TyOZM8PaSrSOq2+RfmHumDqz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Customer Segmentation"],"metadata":{"id":"fDOd_eXBAAph"}},{"cell_type":"markdown","source":["## Data Preparation & Understanding"],"metadata":{"id":"SM5BCqAuAJsa"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"r4pKQgLZiIPH","executionInfo":{"status":"ok","timestamp":1751974157917,"user_tz":-420,"elapsed":1781,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import math\n","pd.set_option(\"display.max_columns\", None) # show all columns\n","pd.set_option(\"display.max_rows\", None) # show all rows"]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Final Project Dibimbing/sample_dataset.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GOhqnWdTv-W9","executionInfo":{"status":"ok","timestamp":1751974161239,"user_tz":-420,"elapsed":3326,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"6b2f5fd1-5b47-461e-907d-ba3f2c1c571e"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n","1        26381  Michelle     Phelps    NaN  1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M  1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n","\n","         Date               Merchant Name     Category  \n","0  2023-04-03               Smith-Russell     Cosmetic  \n","1  2023-07-17      Peck, Spence and Young       Travel  \n","2  2023-09-20                  Steele Inc     Clothing  \n","3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  \n","4  2023-06-13               Palmer-Hinton  Electronics  "],"text/html":["\n","  <div id=\"df-5f8d6c96-c44d-4758-9ca3-19d9fc2ee660\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>NaN</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f8d6c96-c44d-4758-9ca3-19d9fc2ee660')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f8d6c96-c44d-4758-9ca3-19d9fc2ee660 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f8d6c96-c44d-4758-9ca3-19d9fc2ee660');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0fbf137f-5ea1-47ab-a16a-3d6030825967\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0fbf137f-5ea1-47ab-a16a-3d6030825967')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0fbf137f-5ea1-47ab-a16a-3d6030825967 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20\",\n          \"2001-10-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07\",\n          \"2023-08-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lhuiIBzFC326","executionInfo":{"status":"ok","timestamp":1751974161315,"user_tz":-420,"elapsed":33,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"51d294d5-eeb1-4949-e714-2b82e2af4c84"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 9 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   Customer ID         50000 non-null  int64  \n"," 1   Name                50000 non-null  object \n"," 2   Surname             50000 non-null  object \n"," 3   Gender              44953 non-null  object \n"," 4   Birthdate           50000 non-null  object \n"," 5   Transaction Amount  50000 non-null  float64\n"," 6   Date                50000 non-null  object \n"," 7   Merchant Name       50000 non-null  object \n"," 8   Category            50000 non-null  object \n","dtypes: float64(1), int64(1), object(7)\n","memory usage: 3.4+ MB\n"]}]},{"cell_type":"markdown","source":["Based on informastion and tabel from dataset, there's some description from that tabel or dataset. Here's the explanation from that dataset :\n","\n","- Customer ID : The unique identifier for each customer.\n","- Name : The customer's name.\n","- Surname : The customer's last name.\n","- Gender : The gender of the customer.\n","- Birthdate : The customer's date of birth.\n","- Transaction Amount : The amount of the transaction. ($)\n","- Date : The date of the transaction.\n","- Merchant Name :The name of the merchant where the transaction was made.\n","- Category : The category of the transaction."],"metadata":{"id":"XRLREfgbolWR"}},{"cell_type":"markdown","source":["Based on that explanation, we're have some goals on this dataset. The goals that we're gonna hope was the determined of typical customer based on their transaction with some of categorical from this dataset. The purpose in this goal was we're gonna help the company to know every single customer so that the company have a previous step before it would be happend."],"metadata":{"id":"n706dkC2o_j-"}},{"cell_type":"markdown","source":["# Feature Engginering / Data Cleaning"],"metadata":{"id":"cJuCrheOBCqj"}},{"cell_type":"markdown","source":["## 1. Duplicate Handling"],"metadata":{"id":"3fpHOqqrBern"}},{"cell_type":"code","source":["len(df.drop_duplicates()) / len(df)\n","#jika output dari code di cell ini tidak bernilai 1 maka terdapat duplikat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bQRvJVLV187t","executionInfo":{"status":"ok","timestamp":1751974201762,"user_tz":-420,"elapsed":80,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"594b8694-6a47-4b16-e86d-d0ddfbcc2430"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["No Any Duplicate"],"metadata":{"id":"UPjhRk9KCfbo"}},{"cell_type":"markdown","source":["## 2. Missing Value Handling\n","## Identifying missing value"],"metadata":{"id":"omQigTNNClck"}},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"o5RdAno5CiQI","executionInfo":{"status":"ok","timestamp":1751974202681,"user_tz":-420,"elapsed":249,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"b41f8ba5-f491-4551-abac-eeef9a626b7c"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Customer ID              0\n","Name                     0\n","Surname                  0\n","Gender                5047\n","Birthdate                0\n","Transaction Amount       0\n","Date                     0\n","Merchant Name            0\n","Category                 0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Customer ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Surname</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>5047</td>\n","    </tr>\n","    <tr>\n","      <th>Birthdate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Transaction Amount</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Merchant Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Category</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["for column in df.columns:\n","    print(f\"============= {column} =================\")\n","    display(df[column].value_counts())\n","    print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1JO6ZDYQvxvmJaIya0w8fFpcki1EdVXK_"},"id":"271qFgA7DnXU","executionInfo":{"status":"ok","timestamp":1751974215253,"user_tz":-420,"elapsed":11362,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"3fb721c6-c691-4f62-e3aa-2d5aeae82491"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["df[df.isna().any(axis=1)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"10SJKG3ZR38KhiidcMnUp3ZM9p-v3dQrM"},"id":"7x6SW8SAFB8F","executionInfo":{"status":"ok","timestamp":1751974215985,"user_tz":-420,"elapsed":326,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"d4c1ccce-88d7-4697-8020-90b47c94f502"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","source":["After we analyze that data, there's no any abnormal data of column.  It's just only having a missing value on gender. So that's means, we're gonna check the precentage of that gender for determining who's gonna be a object or numerical data."],"metadata":{"id":"ZHvKucdvFetW"}},{"cell_type":"code","source":["# Menghitung persentase nilai NaN di kolom gender\n","100 * len(df[df['Gender'].isna()]) / len(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CtnCHLrhF9K_","executionInfo":{"status":"ok","timestamp":1751974272728,"user_tz":-420,"elapsed":68,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"6fce915e-fefe-4de4-9de7-fdaee76d0926"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10.094"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Based on percentage, the data is less than 20%, so that means we're gonna handling with the modus. The reason using that modus because the type object of that column is string / object"],"metadata":{"id":"MGrazyfQGQhL"}},{"cell_type":"code","source":["#Mode imputation Untuk gender\n","mode_gender = df[~df['Gender'].isna()]['Gender'].mode()[0]\n","mode_gender"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"bs7XhSc0zeYk","executionInfo":{"status":"ok","timestamp":1751974274133,"user_tz":-420,"elapsed":63,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"9e738564-7c0f-415d-fbd0-6738d11e7e4e"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'F'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#implement missing value imputation to EDA, from gender mode value in dataset\n","df['Gender'] = df['Gender'].apply(lambda x: mode_gender if pd.isna(x) else x)"],"metadata":{"id":"IFsD0vnGztbR","executionInfo":{"status":"ok","timestamp":1751974275548,"user_tz":-420,"elapsed":6,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"cVd7zQBfIm9H","executionInfo":{"status":"ok","timestamp":1751974276854,"user_tz":-420,"elapsed":16,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"30900950-06d7-48e9-90ec-4b79096f528e"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Customer ID           0\n","Name                  0\n","Surname               0\n","Gender                0\n","Birthdate             0\n","Transaction Amount    0\n","Date                  0\n","Merchant Name         0\n","Category              0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Customer ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Surname</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Birthdate</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Transaction Amount</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Merchant Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Category</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"Y8kEVwZv7epL","executionInfo":{"status":"ok","timestamp":1751974278642,"user_tz":-420,"elapsed":181,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"7d3c1cc4-d0be-4ff8-d23b-a58e33a6f56e"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID       Name     Surname Gender   Birthdate  Transaction Amount  \\\n","0       752858       Sean   Rodriguez      F  2002-10-20               35.47   \n","1        26381   Michelle      Phelps      F  1985-10-24             2552.72   \n","2       305449      Jacob    Williams      M  1981-10-25              115.97   \n","3       988259     Nathan      Snyder      M  1977-10-26               11.31   \n","4       764762    Crystal       Knapp      F  1951-11-02               62.21   \n","5       576539     Monica    Bartlett      F  2001-10-20               99.14   \n","6       124681     Thomas        Shaw      F  1976-10-26              145.94   \n","7       521807     Kelsey        Pena      F  1968-10-28              161.39   \n","8       504238     Denise      Porter      M  1957-10-31               77.73   \n","9       583532  Alexander  Richardson      F  1974-10-27              142.85   \n","\n","         Date               Merchant Name     Category  \n","0  2023-04-03               Smith-Russell     Cosmetic  \n","1  2023-07-17      Peck, Spence and Young       Travel  \n","2  2023-09-20                  Steele Inc     Clothing  \n","3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  \n","4  2023-06-13               Palmer-Hinton  Electronics  \n","5  2023-08-24      Tran, Torres and Joyce     Cosmetic  \n","6  2023-08-30   Evans, Griffin and Torres     Cosmetic  \n","7  2023-02-08                  Miller PLC     Cosmetic  \n","8  2023-01-12              Jackson-Morgan   Restaurant  \n","9  2023-06-07    Blake, Mays and Anderson     Clothing  "],"text/html":["\n","  <div id=\"df-e13c0255-f475-441d-84c5-4c403c062c62\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>576539</td>\n","      <td>Monica</td>\n","      <td>Bartlett</td>\n","      <td>F</td>\n","      <td>2001-10-20</td>\n","      <td>99.14</td>\n","      <td>2023-08-24</td>\n","      <td>Tran, Torres and Joyce</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>124681</td>\n","      <td>Thomas</td>\n","      <td>Shaw</td>\n","      <td>F</td>\n","      <td>1976-10-26</td>\n","      <td>145.94</td>\n","      <td>2023-08-30</td>\n","      <td>Evans, Griffin and Torres</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>521807</td>\n","      <td>Kelsey</td>\n","      <td>Pena</td>\n","      <td>F</td>\n","      <td>1968-10-28</td>\n","      <td>161.39</td>\n","      <td>2023-02-08</td>\n","      <td>Miller PLC</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>504238</td>\n","      <td>Denise</td>\n","      <td>Porter</td>\n","      <td>M</td>\n","      <td>1957-10-31</td>\n","      <td>77.73</td>\n","      <td>2023-01-12</td>\n","      <td>Jackson-Morgan</td>\n","      <td>Restaurant</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>583532</td>\n","      <td>Alexander</td>\n","      <td>Richardson</td>\n","      <td>F</td>\n","      <td>1974-10-27</td>\n","      <td>142.85</td>\n","      <td>2023-06-07</td>\n","      <td>Blake, Mays and Anderson</td>\n","      <td>Clothing</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e13c0255-f475-441d-84c5-4c403c062c62')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e13c0255-f475-441d-84c5-4c403c062c62 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e13c0255-f475-441d-84c5-4c403c062c62');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f2ef7735-d0b9-4e63-b8ce-c6ea21a0540b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2ef7735-d0b9-4e63-b8ce-c6ea21a0540b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f2ef7735-d0b9-4e63-b8ce-c6ea21a0540b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20\",\n          \"2001-10-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07\",\n          \"2023-08-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["## 3. Outlier Handling"],"metadata":{"id":"4PphwiXDl5ut"}},{"cell_type":"code","source":["# untuk plot Q-Q\n","import scipy.stats as stats"],"metadata":{"id":"QF_ht4qYe5z-","executionInfo":{"status":"ok","timestamp":1751974280506,"user_tz":-420,"elapsed":38,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["numeric_columns = df.select_dtypes(include=['number']).columns\n","numeric_columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KbtFiX4Ol5XH","executionInfo":{"status":"ok","timestamp":1751974282011,"user_tz":-420,"elapsed":14,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"1c4b1352-f5de-4430-8a19-e19152569d00"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Customer ID', 'Transaction Amount'], dtype='object')"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# adjust the figure size for better readability\n","plt.figure(figsize=(12,6))\n","\n","# plotting\n","for i in range(0, len(numeric_columns)):\n","    plt.subplot(1, len(numeric_columns), i+1)\n","    sns.boxplot(y=df[numeric_columns[i]], color='red')\n","    plt.tight_layout()"],"metadata":{"id":"5mC0DrSPloRN","colab":{"base_uri":"https://localhost:8080/","height":606},"executionInfo":{"status":"ok","timestamp":1751974283897,"user_tz":-420,"elapsed":699,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"9acba526-3297-40ca-d53d-f4e87d622437"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# check the outlier full profile\n","for i in numeric_columns:\n","  outlier = df[i].min()\n","  a = df[df[i] == outlier]\n","\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"id":"jI_Tpb0b6wC-","executionInfo":{"status":"ok","timestamp":1751974285221,"user_tz":-420,"elapsed":58,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"6b57eff5-4760-4747-a696-005e60bcd030"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Customer ID   Name Surname Gender   Birthdate  Transaction Amount  \\\n","37438       368447  Jared   Allen      M  1957-10-31                5.01   \n","\n","             Date              Merchant Name Category  \n","37438  2023-02-06  Garcia, Thompson and Hull   Market  "],"text/html":["\n","  <div id=\"df-9ca023aa-a846-4156-8d0d-e580c2321f0c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>37438</th>\n","      <td>368447</td>\n","      <td>Jared</td>\n","      <td>Allen</td>\n","      <td>M</td>\n","      <td>1957-10-31</td>\n","      <td>5.01</td>\n","      <td>2023-02-06</td>\n","      <td>Garcia, Thompson and Hull</td>\n","      <td>Market</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ca023aa-a846-4156-8d0d-e580c2321f0c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ca023aa-a846-4156-8d0d-e580c2321f0c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ca023aa-a846-4156-8d0d-e580c2321f0c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_9a5a357d-156a-42ba-8bef-68002503ef2b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('a')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9a5a357d-156a-42ba-8bef-68002503ef2b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('a');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"a","repr_error":"0"}},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["After we check the outlier, there's one outlier but the box of outlier is still clear. So, we don't need handle on it."],"metadata":{"id":"iBL9P1WD7yd7"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"o_NZTUSXjtAr","executionInfo":{"status":"ok","timestamp":1751974287012,"user_tz":-420,"elapsed":61,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"b76eef65-58c0-4204-db5e-ded3c9b8c29a"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F  1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M  1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n","\n","         Date               Merchant Name     Category  \n","0  2023-04-03               Smith-Russell     Cosmetic  \n","1  2023-07-17      Peck, Spence and Young       Travel  \n","2  2023-09-20                  Steele Inc     Clothing  \n","3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  \n","4  2023-06-13               Palmer-Hinton  Electronics  "],"text/html":["\n","  <div id=\"df-c57988bf-7723-4077-98dc-d2f939788a85\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c57988bf-7723-4077-98dc-d2f939788a85')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c57988bf-7723-4077-98dc-d2f939788a85 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c57988bf-7723-4077-98dc-d2f939788a85');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-402f1055-2899-4294-bb63-f737687d814a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-402f1055-2899-4294-bb63-f737687d814a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-402f1055-2899-4294-bb63-f737687d814a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20\",\n          \"2001-10-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07\",\n          \"2023-08-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["# Data Manipulation / EDA"],"metadata":{"id":"rSv7PRvlttWL"}},{"cell_type":"code","source":["df_transaction = df.copy()\n","df_transaction.head()"],"metadata":{"id":"onFUxCFltso3","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1751974289376,"user_tz":-420,"elapsed":197,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"a67cd068-dd1c-4e9a-9b9f-3be37c9f65a6"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F  2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F  1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M  1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M  1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F  1951-11-02               62.21   \n","\n","         Date               Merchant Name     Category  \n","0  2023-04-03               Smith-Russell     Cosmetic  \n","1  2023-07-17      Peck, Spence and Young       Travel  \n","2  2023-09-20                  Steele Inc     Clothing  \n","3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  \n","4  2023-06-13               Palmer-Hinton  Electronics  "],"text/html":["\n","  <div id=\"df-135fe26c-a37e-4ad0-8fbc-6cf531556df5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-135fe26c-a37e-4ad0-8fbc-6cf531556df5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-135fe26c-a37e-4ad0-8fbc-6cf531556df5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-135fe26c-a37e-4ad0-8fbc-6cf531556df5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d741b359-b919-4291-8aa3-5c5a59db17bc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d741b359-b919-4291-8aa3-5c5a59db17bc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d741b359-b919-4291-8aa3-5c5a59db17bc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_transaction","summary":"{\n  \"name\": \"df_transaction\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20\",\n          \"2001-10-20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07\",\n          \"2023-08-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["\n","## Filtering"],"metadata":{"id":"ABZDsqke8F9-"}},{"cell_type":"markdown","source":["1. Which the highest amount of merchant name that categorized as travel and also above of transaction amount ?"],"metadata":{"id":"2dSnmiwh9BFQ"}},{"cell_type":"code","source":["df_transaction['Transaction Amount'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JD5O29_78Fzi","executionInfo":{"status":"ok","timestamp":1751974293201,"user_tz":-420,"elapsed":306,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5cea258d-b1f4-480f-d9d2-01d14cf3e22c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(442.1192394)"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_filter = df_transaction[(df_transaction['Transaction Amount'] > df_transaction['Transaction Amount'].mean()) & (df_transaction['Category'] == 'Travel')]\n","df_filter.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"NXJi7xT49ceL","executionInfo":{"status":"ok","timestamp":1751974294588,"user_tz":-420,"elapsed":88,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5cfccc11-b1dc-4ef6-adf8-c417f1512e55"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Customer ID      Name    Surname Gender   Birthdate  Transaction Amount  \\\n","1         26381  Michelle     Phelps      F  1985-10-24             2552.72   \n","10       924841  Kimberly       Ball      M  1976-10-26              928.68   \n","19       401993    Steven      Smith      M  1999-10-21             1468.14   \n","27       517389     Brian      Jones      F  1956-10-31              781.85   \n","28       744599   William  Contreras      F  2003-10-20             1479.49   \n","\n","          Date              Merchant Name Category  \n","1   2023-07-17     Peck, Spence and Young   Travel  \n","10  2023-02-11    Miller, Walker and Bond   Travel  \n","19  2023-05-14  Thompson, Lopez and Mason   Travel  \n","27  2023-03-30                 Dorsey Inc   Travel  \n","28  2023-04-15    Fuller, Jones and White   Travel  "],"text/html":["\n","  <div id=\"df-693b1ce2-3931-408f-8719-18f4884ef244\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>924841</td>\n","      <td>Kimberly</td>\n","      <td>Ball</td>\n","      <td>M</td>\n","      <td>1976-10-26</td>\n","      <td>928.68</td>\n","      <td>2023-02-11</td>\n","      <td>Miller, Walker and Bond</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>401993</td>\n","      <td>Steven</td>\n","      <td>Smith</td>\n","      <td>M</td>\n","      <td>1999-10-21</td>\n","      <td>1468.14</td>\n","      <td>2023-05-14</td>\n","      <td>Thompson, Lopez and Mason</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>517389</td>\n","      <td>Brian</td>\n","      <td>Jones</td>\n","      <td>F</td>\n","      <td>1956-10-31</td>\n","      <td>781.85</td>\n","      <td>2023-03-30</td>\n","      <td>Dorsey Inc</td>\n","      <td>Travel</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>744599</td>\n","      <td>William</td>\n","      <td>Contreras</td>\n","      <td>F</td>\n","      <td>2003-10-20</td>\n","      <td>1479.49</td>\n","      <td>2023-04-15</td>\n","      <td>Fuller, Jones and White</td>\n","      <td>Travel</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-693b1ce2-3931-408f-8719-18f4884ef244')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-693b1ce2-3931-408f-8719-18f4884ef244 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-693b1ce2-3931-408f-8719-18f4884ef244');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b9555e6f-2cbf-48b2-881c-c5e8e315da54\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9555e6f-2cbf-48b2-881c-c5e8e315da54')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b9555e6f-2cbf-48b2-881c-c5e8e315da54 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_filter","repr_error":"0"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["Barang = df_filter['Merchant Name'].value_counts().sort_values(ascending=False).reset_index().head(10)\n","Barang # menampilkan tabel yang mana menampilkan tipe barang dan jumlah barang berdasarkan yang sudah difilter dari atas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"G6rM3Kybv8zS","executionInfo":{"status":"ok","timestamp":1751974296712,"user_tz":-420,"elapsed":70,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"91f80d14-bad5-4b7c-ece0-21bc72aea471"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Merchant Name  count\n","0   Johnson PLC     15\n","1     Smith PLC     13\n","2     Smith Inc     12\n","3   Johnson Ltd     11\n","4   Johnson LLC     10\n","5     Jones PLC     10\n","6  Williams LLC     10\n","7     Smith Ltd     10\n","8     Smith LLC     10\n","9     Jones Ltd      9"],"text/html":["\n","  <div id=\"df-75929f63-e885-4da0-8d37-b7b20ed908b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Merchant Name</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Johnson PLC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Smith PLC</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Smith Inc</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Johnson Ltd</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Johnson LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Jones PLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Williams LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Smith Ltd</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Smith LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Jones Ltd</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75929f63-e885-4da0-8d37-b7b20ed908b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-75929f63-e885-4da0-8d37-b7b20ed908b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-75929f63-e885-4da0-8d37-b7b20ed908b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-12d1c3ec-9691-42d0-a49d-7acebf73f963\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12d1c3ec-9691-42d0-a49d-7acebf73f963')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-12d1c3ec-9691-42d0-a49d-7acebf73f963 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_053c824e-7f69-468b-bfe5-7a4d5bc4fea4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Barang')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_053c824e-7f69-468b-bfe5-7a4d5bc4fea4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Barang');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Barang","summary":"{\n  \"name\": \"Barang\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Smith LLC\",\n          \"Smith PLC\",\n          \"Jones PLC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 9,\n        \"max\": 15,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15,\n          13,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["Barang.rename(\n","    columns = {\n","        'count': 'Quantity',\n","    }, inplace = True\n",")\n","Barang # mereplace nama count dgn quantity"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"H01URdxtxNp4","executionInfo":{"status":"ok","timestamp":1751974315437,"user_tz":-420,"elapsed":62,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"a150deae-b70b-4496-cb10-1019be630136"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Merchant Name  Quantity\n","0   Johnson PLC        15\n","1     Smith PLC        13\n","2     Smith Inc        12\n","3   Johnson Ltd        11\n","4   Johnson LLC        10\n","5     Jones PLC        10\n","6  Williams LLC        10\n","7     Smith Ltd        10\n","8     Smith LLC        10\n","9     Jones Ltd         9"],"text/html":["\n","  <div id=\"df-309830e0-1361-43d5-b9ce-cfa0056bb106\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Merchant Name</th>\n","      <th>Quantity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Johnson PLC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Smith PLC</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Smith Inc</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Johnson Ltd</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Johnson LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Jones PLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Williams LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Smith Ltd</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Smith LLC</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Jones Ltd</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-309830e0-1361-43d5-b9ce-cfa0056bb106')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-309830e0-1361-43d5-b9ce-cfa0056bb106 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-309830e0-1361-43d5-b9ce-cfa0056bb106');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-806f3ae6-8691-4aa8-b8cd-4ff5ff3f916d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-806f3ae6-8691-4aa8-b8cd-4ff5ff3f916d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-806f3ae6-8691-4aa8-b8cd-4ff5ff3f916d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_8eed400e-77a4-4b3b-8f17-b2804809afa4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Barang')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8eed400e-77a4-4b3b-8f17-b2804809afa4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Barang');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Barang","summary":"{\n  \"name\": \"Barang\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Smith LLC\",\n          \"Smith PLC\",\n          \"Jones PLC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 9,\n        \"max\": 15,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15,\n          13,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# Visualisasi dalam bentuk bar chart\n","plt.figure(figsize=(10, 6))\n","ax = sns.barplot(x='Quantity', y='Merchant Name', data = Barang, palette='viridis')\n","\n","# Tambahkan angka di atas bar dengan format angka\n","for i,(value,name) in enumerate(zip(Barang['Quantity'],Barang['Quantity'])):\n","  ax.text(value + 0.1, i, f'{value}', color ='black', va = 'center', fontsize = 10)\n","\n","# Tambahkan judul dan label\n","plt.title('Produk dengan Harga Unit di Atas Rata-rata (Per Product Line)', fontsize=14)\n","plt.xlabel('Quantity', fontsize=12)\n","plt.ylabel('Merchant Name', fontsize=12)\n","\n","# Atur skala sumbu X agar lebih proporsional\n","plt.xlim(0, max(Barang['Quantity']) + 2)\n","#plt.xticks(rotation=45)\n","\n","plt.tight_layout()  # Menghindari teks terpotong\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":694},"id":"SX-CBoZbxRMH","executionInfo":{"status":"ok","timestamp":1751974522364,"user_tz":-420,"elapsed":332,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"951a7a23-997e-4a17-ea07-2d2555e44d16"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-23-144606485.py:3: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.barplot(x='Quantity', y='Merchant Name', data = Barang, palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Working With Date"],"metadata":{"id":"MP3cKm-Og_9L"}},{"cell_type":"markdown","source":["2. in which month that the total transaction has the highest average amount ?"],"metadata":{"id":"vRlsBuAthsGR"}},{"cell_type":"code","source":["df_transaction.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZxiDe-VPg_Fr","executionInfo":{"status":"ok","timestamp":1751974525043,"user_tz":-420,"elapsed":58,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"243f8c4a-2d0b-41e8-cf8c-b0ff4e692de3"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 9 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   Customer ID         50000 non-null  int64  \n"," 1   Name                50000 non-null  object \n"," 2   Surname             50000 non-null  object \n"," 3   Gender              50000 non-null  object \n"," 4   Birthdate           50000 non-null  object \n"," 5   Transaction Amount  50000 non-null  float64\n"," 6   Date                50000 non-null  object \n"," 7   Merchant Name       50000 non-null  object \n"," 8   Category            50000 non-null  object \n","dtypes: float64(1), int64(1), object(7)\n","memory usage: 3.4+ MB\n"]}]},{"cell_type":"code","source":["df_transaction['Date']= pd.to_datetime(df_transaction['Date'])\n","df_transaction['Birthdate']= pd.to_datetime(df_transaction['Birthdate'])\n","df_transaction['DayOfWeek'] = df_transaction['Date'].dt.day_name()\n","df_transaction['Year'] = df_transaction['Date'].dt.year\n","df_transaction['Year_People'] = df_transaction['Birthdate'].dt.year\n","df_transaction['Day'] = df_transaction['Date'].dt.day\n","df_transaction.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z7JuyTXFiG4e","executionInfo":{"status":"ok","timestamp":1751974526598,"user_tz":-420,"elapsed":144,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"c64834ce-5df5-47f0-9516-621c4c6b90e2"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 13 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   Customer ID         50000 non-null  int64         \n"," 1   Name                50000 non-null  object        \n"," 2   Surname             50000 non-null  object        \n"," 3   Gender              50000 non-null  object        \n"," 4   Birthdate           50000 non-null  datetime64[ns]\n"," 5   Transaction Amount  50000 non-null  float64       \n"," 6   Date                50000 non-null  datetime64[ns]\n"," 7   Merchant Name       50000 non-null  object        \n"," 8   Category            50000 non-null  object        \n"," 9   DayOfWeek           50000 non-null  object        \n"," 10  Year                50000 non-null  int32         \n"," 11  Year_People         50000 non-null  int32         \n"," 12  Day                 50000 non-null  int32         \n","dtypes: datetime64[ns](2), float64(1), int32(3), int64(1), object(6)\n","memory usage: 4.4+ MB\n"]}]},{"cell_type":"code","source":["df_transaction['Month Name'] = pd.DatetimeIndex(df_transaction['Date']).month_name()"],"metadata":{"id":"be-vfQJh2V2-","executionInfo":{"status":"ok","timestamp":1751974530572,"user_tz":-420,"elapsed":44,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["df_transaction['Day Month'] = df_transaction['Month Name'].astype(str) + ' ' + df_transaction['Day'].astype(str)\n","df_transaction.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"i9G5COAKYiO1","executionInfo":{"status":"ok","timestamp":1751974532049,"user_tz":-420,"elapsed":402,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"3fbf27d0-23d9-469b-b676-985c3a39a0a9"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender  Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F 2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F 1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M 1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M 1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F 1951-11-02               62.21   \n","\n","        Date               Merchant Name     Category  DayOfWeek  Year  \\\n","0 2023-04-03               Smith-Russell     Cosmetic     Monday  2023   \n","1 2023-07-17      Peck, Spence and Young       Travel     Monday  2023   \n","2 2023-09-20                  Steele Inc     Clothing  Wednesday  2023   \n","3 2023-01-11  Wilson, Wilson and Russell     Cosmetic  Wednesday  2023   \n","4 2023-06-13               Palmer-Hinton  Electronics    Tuesday  2023   \n","\n","   Year_People  Day Month Name     Day Month  \n","0         2002    3      April       April 3  \n","1         1985   17       July       July 17  \n","2         1981   20  September  September 20  \n","3         1977   11    January    January 11  \n","4         1951   13       June       June 13  "],"text/html":["\n","  <div id=\"df-5574fd7d-fbb8-4c35-9f9d-ccedc4d05358\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>DayOfWeek</th>\n","      <th>Year</th>\n","      <th>Year_People</th>\n","      <th>Day</th>\n","      <th>Month Name</th>\n","      <th>Day Month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>April</td>\n","      <td>April 3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>1985</td>\n","      <td>17</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1981</td>\n","      <td>20</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1977</td>\n","      <td>11</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Tuesday</td>\n","      <td>2023</td>\n","      <td>1951</td>\n","      <td>13</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5574fd7d-fbb8-4c35-9f9d-ccedc4d05358')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5574fd7d-fbb8-4c35-9f9d-ccedc4d05358 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5574fd7d-fbb8-4c35-9f9d-ccedc4d05358');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a54eaee6-c241-4556-ab6f-4088771d427d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a54eaee6-c241-4556-ab6f-4088771d427d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a54eaee6-c241-4556-ab6f-4088771d427d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_transaction","summary":"{\n  \"name\": \"df_transaction\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1948-11-02 00:00:00\",\n        \"max\": \"2005-10-19 00:00:00\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20 00:00:00\",\n          \"2001-10-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_People\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df_transaction.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V1kYMQ7OgJeY","executionInfo":{"status":"ok","timestamp":1751974543074,"user_tz":-420,"elapsed":78,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"59703e28-942e-4114-edcb-100bb0620fb1"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 15 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   Customer ID         50000 non-null  int64         \n"," 1   Name                50000 non-null  object        \n"," 2   Surname             50000 non-null  object        \n"," 3   Gender              50000 non-null  object        \n"," 4   Birthdate           50000 non-null  datetime64[ns]\n"," 5   Transaction Amount  50000 non-null  float64       \n"," 6   Date                50000 non-null  datetime64[ns]\n"," 7   Merchant Name       50000 non-null  object        \n"," 8   Category            50000 non-null  object        \n"," 9   DayOfWeek           50000 non-null  object        \n"," 10  Year                50000 non-null  int32         \n"," 11  Year_People         50000 non-null  int32         \n"," 12  Day                 50000 non-null  int32         \n"," 13  Month Name          50000 non-null  object        \n"," 14  Day Month           50000 non-null  object        \n","dtypes: datetime64[ns](2), float64(1), int32(3), int64(1), object(8)\n","memory usage: 5.1+ MB\n"]}]},{"cell_type":"code","source":["average_transaction = df_transaction.groupby(\"Month Name\")[\"Transaction Amount\"].mean().reset_index()\n","average_transaction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"rGmnvshWljzP","executionInfo":{"status":"ok","timestamp":1751974545261,"user_tz":-420,"elapsed":44,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"0fcdf094-0afd-470c-aac5-8cf1f063a551"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Month Name  Transaction Amount\n","0      April          449.760617\n","1     August          442.943175\n","2   February          442.528008\n","3    January          430.791368\n","4       July          453.470416\n","5       June          428.792775\n","6      March          439.326120\n","7        May          447.991364\n","8    October          446.892999\n","9  September          441.344005"],"text/html":["\n","  <div id=\"df-d6414d52-333d-4f94-81e9-f4375b89ee9d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Month Name</th>\n","      <th>Transaction Amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>April</td>\n","      <td>449.760617</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>August</td>\n","      <td>442.943175</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>February</td>\n","      <td>442.528008</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>January</td>\n","      <td>430.791368</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>July</td>\n","      <td>453.470416</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>June</td>\n","      <td>428.792775</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>March</td>\n","      <td>439.326120</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>May</td>\n","      <td>447.991364</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>October</td>\n","      <td>446.892999</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>September</td>\n","      <td>441.344005</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6414d52-333d-4f94-81e9-f4375b89ee9d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d6414d52-333d-4f94-81e9-f4375b89ee9d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d6414d52-333d-4f94-81e9-f4375b89ee9d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ca4abdf4-16b6-4329-9f47-772cac1c1a35\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca4abdf4-16b6-4329-9f47-772cac1c1a35')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ca4abdf4-16b6-4329-9f47-772cac1c1a35 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_eb4def9e-d02c-442b-8bc2-80535c0e1d8a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('average_transaction')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_eb4def9e-d02c-442b-8bc2-80535c0e1d8a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('average_transaction');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"average_transaction","summary":"{\n  \"name\": \"average_transaction\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"October\",\n          \"August\",\n          \"June\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.880868773926073,\n        \"min\": 428.792774819323,\n        \"max\": 453.47041590326126,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          446.89299916457816,\n          442.94317466197447,\n          428.792774819323\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# Urutan bulan sesuai kalender\n","month_order = ['January', 'February', 'March', 'April', 'May', 'June',\n","               'July', 'August', 'September', 'October', 'November', 'December']\n","\n","# Mengatur kolom 'Month Name' sebagai kategori terurut\n","average_transaction['Month Name'] = pd.Categorical(average_transaction['Month Name'],\n","                                                   categories=month_order,\n","                                                   ordered=True)\n","\n","# Mengurutkan dataframe berdasarkan urutan bulan\n","average_transaction = average_transaction.sort_values('Month Name')\n","average_transaction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"4RYWStPbhwDB","executionInfo":{"status":"ok","timestamp":1751974547235,"user_tz":-420,"elapsed":38,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5771c404-0df7-47a9-855d-20d811eefed7"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Month Name  Transaction Amount\n","3    January          430.791368\n","2   February          442.528008\n","6      March          439.326120\n","0      April          449.760617\n","7        May          447.991364\n","5       June          428.792775\n","4       July          453.470416\n","1     August          442.943175\n","9  September          441.344005\n","8    October          446.892999"],"text/html":["\n","  <div id=\"df-625aaa4c-0f8d-455d-85de-bacd4250cfa4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Month Name</th>\n","      <th>Transaction Amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>January</td>\n","      <td>430.791368</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>February</td>\n","      <td>442.528008</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>March</td>\n","      <td>439.326120</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>April</td>\n","      <td>449.760617</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>May</td>\n","      <td>447.991364</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>June</td>\n","      <td>428.792775</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>July</td>\n","      <td>453.470416</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>August</td>\n","      <td>442.943175</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>September</td>\n","      <td>441.344005</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>October</td>\n","      <td>446.892999</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-625aaa4c-0f8d-455d-85de-bacd4250cfa4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-625aaa4c-0f8d-455d-85de-bacd4250cfa4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-625aaa4c-0f8d-455d-85de-bacd4250cfa4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c3493719-687b-4411-8a34-ef8c4d88aa4e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c3493719-687b-4411-8a34-ef8c4d88aa4e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c3493719-687b-4411-8a34-ef8c4d88aa4e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e8989b1e-d6e5-454e-91ff-c689e9c7dcdc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('average_transaction')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e8989b1e-d6e5-454e-91ff-c689e9c7dcdc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('average_transaction');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"average_transaction","summary":"{\n  \"name\": \"average_transaction\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"September\",\n          \"February\",\n          \"June\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.880868773926073,\n        \"min\": 428.792774819323,\n        \"max\": 453.47041590326126,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          441.34400543372794,\n          442.52800782859504,\n          428.792774819323\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["# Visualisasi lineplot\n","plt.figure(figsize=(15, 13))\n","sns.lineplot(data=average_transaction, x=\"Month Name\", y=\"Transaction Amount\", marker=\"o\", color=\"blue\", linewidth=2)\n","\n","# Menambahkan angka di setiap titik (Opsional)\n","for x, y in zip(average_transaction['Month Name'], average_transaction['Transaction Amount']):\n","    plt.annotate(format(y, '.2f'), xy=(x, y), textcoords=\"offset points\", xytext=(27, 10), ha='center', color='black', fontsize=10)\n","\n","# Menambahkan judul dan label\n","plt.title(\"Average Amount each Month \", fontsize=16)\n","plt.xlabel(\"Day of the Week\", fontsize=12)\n","plt.ylabel(\"Average Amount (Rp)\", fontsize=12)\n","plt.xticks(rotation=45)\n","\n","plt.tight_layout()  # Menghindari elemen terpotong\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ZkusJFVIl8s_","executionInfo":{"status":"ok","timestamp":1751974549381,"user_tz":-420,"elapsed":332,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"92f3f691-2699-451a-c517-cf71eba23075"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Pivot Table, sort index"],"metadata":{"id":"tsu3ATLW5pg5"}},{"cell_type":"markdown","source":["3. in which category that have a biggest transaction based on gender ?"],"metadata":{"id":"3WWZGR-Q9jfU"}},{"cell_type":"code","source":["new_varians = pd.pivot_table(\n","    data = df_transaction ,\n","    index = ['Category','Gender'],\n","    values = 'Transaction Amount',\n","    aggfunc = 'mean'\n",").reset_index().sort_values(by ='Transaction Amount', ascending = False)\n","new_varians"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"Q6snOHJW5_ox","executionInfo":{"status":"ok","timestamp":1751974586092,"user_tz":-420,"elapsed":112,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"3cd5b876-d30e-4797-c57f-29370a25e78b"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Category Gender  Transaction Amount\n","10       Travel      F         1549.420924\n","11       Travel      M         1528.008947\n","5   Electronics      M          533.157401\n","4   Electronics      F          523.578408\n","6        Market      F          257.062509\n","7        Market      M          256.112235\n","0      Clothing      F          160.147661\n","1      Clothing      M          159.174585\n","2      Cosmetic      F          106.607677\n","3      Cosmetic      M          106.028407\n","9    Restaurant      M           55.595780\n","8    Restaurant      F           54.909470"],"text/html":["\n","  <div id=\"df-af208553-6850-49d6-b9d3-8c13c7f4697d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10</th>\n","      <td>Travel</td>\n","      <td>F</td>\n","      <td>1549.420924</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Travel</td>\n","      <td>M</td>\n","      <td>1528.008947</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Electronics</td>\n","      <td>M</td>\n","      <td>533.157401</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Electronics</td>\n","      <td>F</td>\n","      <td>523.578408</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Market</td>\n","      <td>F</td>\n","      <td>257.062509</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Market</td>\n","      <td>M</td>\n","      <td>256.112235</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Clothing</td>\n","      <td>F</td>\n","      <td>160.147661</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Clothing</td>\n","      <td>M</td>\n","      <td>159.174585</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cosmetic</td>\n","      <td>F</td>\n","      <td>106.607677</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cosmetic</td>\n","      <td>M</td>\n","      <td>106.028407</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Restaurant</td>\n","      <td>M</td>\n","      <td>55.595780</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Restaurant</td>\n","      <td>F</td>\n","      <td>54.909470</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af208553-6850-49d6-b9d3-8c13c7f4697d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af208553-6850-49d6-b9d3-8c13c7f4697d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af208553-6850-49d6-b9d3-8c13c7f4697d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-75958186-a3a3-4d16-adb4-a1d8c1ea19d1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75958186-a3a3-4d16-adb4-a1d8c1ea19d1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-75958186-a3a3-4d16-adb4-a1d8c1ea19d1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_0a5271af-ddee-457a-8b0d-eee07a9eeb5c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('new_varians')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0a5271af-ddee-457a-8b0d-eee07a9eeb5c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('new_varians');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"new_varians","summary":"{\n  \"name\": \"new_varians\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Travel\",\n          \"Electronics\",\n          \"Restaurant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 537.1172010468052,\n        \"min\": 54.909470226742954,\n        \"max\": 1549.4209240641712,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          55.59577964266378,\n          106.02840707964602\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Create the bar chart with sorted values\n","# plt.style.use('dark_background')\n","\n","plt.figure(figsize=(12, 8))\n","\n","ax = sns.barplot(data=new_varians, x='Category', y='Transaction Amount', hue = 'Gender', color='cyan')\n","\n","# Set the title and labels\n","plt.title('Average Transaction Category with Gender')\n","plt.xlabel('Category')\n","plt.ylabel('Transaction Amount')\n","plt.xticks(rotation=45, horizontalalignment='right')\n","\n","# Set the background color to grey\n","#plt.gca().set_facecolor('grey')\n","\n","# Add count labels to the bars\n","\n","for p in ax.patches:\n","    height = p.get_height()\n","    if height > 0:\n","        ax.annotate(\n","            text=format(height, '.0f'),\n","            xy=(p.get_x() + p.get_width() / 2, height),\n","            ha='center', va='center',\n","            xytext=(0, 10),\n","            textcoords='offset points',\n","            color='black'\n","        )\n","                #font = 'monospace')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":855},"id":"uNu00_uR2_Hd","executionInfo":{"status":"ok","timestamp":1751974589045,"user_tz":-420,"elapsed":456,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"0829cd15-5e61-43e6-c89b-502cf2e6f89d"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-33-1889886759.py:6: FutureWarning: \n","\n","Setting a gradient palette using color= is deprecated and will be removed in v0.14.0. Set `palette='dark:cyan'` for the same effect.\n","\n","  ax = sns.barplot(data=new_varians, x='Category', y='Transaction Amount', hue = 'Gender', color='cyan')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[" 4. in which month that have the highest customer for customer ID ?"],"metadata":{"id":"0fpcEVVVsPti"}},{"cell_type":"code","source":["buyer = df_transaction.groupby(\"Month Name\")[\"Customer ID\"].count().reset_index()\n","buyer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"H1WF5SJdnyR-","executionInfo":{"status":"ok","timestamp":1751974613760,"user_tz":-420,"elapsed":78,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"cfb11197-03e6-4357-fb2d-ca2842df10f0"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Month Name  Customer ID\n","0      April         5091\n","1     August         5399\n","2   February         4854\n","3    January         5444\n","4       July         5458\n","5       June         5258\n","6      March         5456\n","7        May         5493\n","8    October         2394\n","9  September         5153"],"text/html":["\n","  <div id=\"df-094cbce1-ad31-4d6d-8f76-53aea88eb7c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Month Name</th>\n","      <th>Customer ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>April</td>\n","      <td>5091</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>August</td>\n","      <td>5399</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>February</td>\n","      <td>4854</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>January</td>\n","      <td>5444</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>July</td>\n","      <td>5458</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>June</td>\n","      <td>5258</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>March</td>\n","      <td>5456</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>May</td>\n","      <td>5493</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>October</td>\n","      <td>2394</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>September</td>\n","      <td>5153</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-094cbce1-ad31-4d6d-8f76-53aea88eb7c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-094cbce1-ad31-4d6d-8f76-53aea88eb7c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-094cbce1-ad31-4d6d-8f76-53aea88eb7c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6b8ca67e-7667-4879-87c0-59a91e8b108b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b8ca67e-7667-4879-87c0-59a91e8b108b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6b8ca67e-7667-4879-87c0-59a91e8b108b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_5205e1a1-1fa7-4756-a00c-565f165744a1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('buyer')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5205e1a1-1fa7-4756-a00c-565f165744a1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('buyer');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"buyer","summary":"{\n  \"name\": \"buyer\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"October\",\n          \"August\",\n          \"June\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 938,\n        \"min\": 2394,\n        \"max\": 5493,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          2394,\n          5399,\n          5258\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Urutan bulan sesuai kalender\n","month_order = ['January', 'February', 'March', 'April', 'May', 'June',\n","               'July', 'August', 'September', 'October', 'November', 'December']\n","\n","# Mengatur kolom 'Month Name' sebagai kategori terurut\n","buyer['Month Name'] = pd.Categorical(buyer['Month Name'],\n","                                                   categories=month_order,\n","                                                   ordered=True)\n","\n","# Mengurutkan dataframe berdasarkan urutan bulan\n","buyer = buyer.sort_values('Month Name')\n","buyer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"uE0XZWO7oAgh","executionInfo":{"status":"ok","timestamp":1751974615538,"user_tz":-420,"elapsed":32,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"7c9947e8-1011-4846-896e-f5a8bc532895"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Month Name  Customer ID\n","3    January         5444\n","2   February         4854\n","6      March         5456\n","0      April         5091\n","7        May         5493\n","5       June         5258\n","4       July         5458\n","1     August         5399\n","9  September         5153\n","8    October         2394"],"text/html":["\n","  <div id=\"df-d3d48abd-615a-48b9-8799-da10ca77332f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Month Name</th>\n","      <th>Customer ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>January</td>\n","      <td>5444</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>February</td>\n","      <td>4854</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>March</td>\n","      <td>5456</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>April</td>\n","      <td>5091</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>May</td>\n","      <td>5493</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>June</td>\n","      <td>5258</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>July</td>\n","      <td>5458</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>August</td>\n","      <td>5399</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>September</td>\n","      <td>5153</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>October</td>\n","      <td>2394</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3d48abd-615a-48b9-8799-da10ca77332f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3d48abd-615a-48b9-8799-da10ca77332f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3d48abd-615a-48b9-8799-da10ca77332f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3df46bd8-56f9-4768-b440-0d3f97fe12c6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3df46bd8-56f9-4768-b440-0d3f97fe12c6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3df46bd8-56f9-4768-b440-0d3f97fe12c6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_04b8b080-a94a-47db-846b-1543c0db482f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('buyer')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_04b8b080-a94a-47db-846b-1543c0db482f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('buyer');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"buyer","summary":"{\n  \"name\": \"buyer\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"September\",\n          \"February\",\n          \"June\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 938,\n        \"min\": 2394,\n        \"max\": 5493,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          5153,\n          4854,\n          5258\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Visualisasi lineplot\n","plt.figure(figsize=(12,10))\n","sns.lineplot(data=buyer, x=\"Month Name\", y=\"Customer ID\", marker=\"o\", color=\"red\", linewidth=2)\n","\n","# Menambahkan angka di setiap titik (Opsional)\n","for x, y in zip(buyer['Month Name'], buyer['Customer ID']):\n","    plt.annotate(format(y, '.0f'), xy=(x, y), textcoords=\"offset pixels\", xytext=(0, 20), ha='center', color='black', fontsize=10)\n","\n","# Menambahkan judul dan label\n","plt.title(\"Count Buyer each Month \", fontsize=16)\n","plt.xlabel(\"Day of the Week\", fontsize=12)\n","plt.ylabel(\"Count Buyer\", fontsize=12)\n","plt.xticks(rotation=45)\n","\n","plt.tight_layout()  # Menghindari elemen terpotong\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"IHtByYGHoOp3","executionInfo":{"status":"ok","timestamp":1751974618227,"user_tz":-420,"elapsed":535,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"fea1b275-d9eb-465e-dacd-4203d4f35715"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 1 Axes>"],"image/png":"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Eyfqrbfe0uXLl6875sCBAzdM+KRUSl63VKlS8vb21tatW7Vq1SqXYxctWqRJkyYl+VqPPPKIKleurGPHjqlNmzY6e/asy/6YmJhbJvrc6b777tOZM2d05swZtWzZMlnPGTBggCQz0+KKFStc9k2fPl0LFy5UlixZEmdkvFPufj8AAOBpGL4HAICHypUrl3799Ve1a9dOq1atUt26dVW0aFFVqlRJ2bJl08mTJ/XHH3/owoULypkzp/Lnz5/43GeeeUZr167V559/rqpVq+qBBx5Q3rx59eeff2r37t3y9/fXrFmzEhuqO7z88sv68ssv9f3336tUqVKqVq2aTp8+rfXr16t27dqqVauW1q5dm2rX2LhxY2XPnl0LFixQnTp1VLJkSXl7e6t27dqJMwQmxy+//OIyQ9qFCxe0Z88ebdmyRZL00EMPKTw83OU5tWvX1qOPPqpvv/1WVatWVZ06deTv768///xT0dHRev755/XOO+/c9HX79euXWC3TvHnzGzYkL1CggL799lu1atVKAwcO1Pjx41WhQgWFhYUpKipKO3fu1L59+1SjRg116tQp2dd9Kyl53Tx58qhPnz5655139NBDD6lu3brKnz+/du/erT///FNDhw7VmDFjrnstLy8vffPNN2rcuLGWLFmiQoUKqU6dOgoODtbRo0e1efNmBQUF6eDBg6l2fe7WtGnTxOtt2LChateurUKFCmnXrl36888/5e3tralTp6p8+fKp8nqp9X4AACC9ICkFAIAHy5s3r1auXKmlS5dq9uzZWrt2rVasWKHY2FgFBwerZs2aat68uZ588knlzp078Xk2m02fffaZmjZtqg8//FAbN27UxYsXFRoaqq5du+qll15S6dKlr3u9okWLau3atRo6dKhWrlyp7777TkWKFNErr7yiwYMHq2HDhql6ffny5dOSJUs0atQobdy4UevWrVNCQoKuXLlyW1/C9+3blzhMTzJDr3Lnzq2GDRuqY8eOevLJJ5NsDD137lyNGTNGs2bN0qpVq5QrVy499NBDGj16tNasWXPL17377rsVGhqqEydOJNng/Gr333+/tm/frvfff1+LFy/W+vXrFRsbq7x586pQoULq1KmTWrVqlexrTq6UvO6kSZNUqVIlTZ48WRs3blRERIQqVqyoOXPmqF27dkkmpSSpcOHC2rBhgyZPnqwvv/xS69at0+XLlxUaGqoHHnhAHTp0SPXrc7fRo0erdu3aeu+99/T777/rt99+U548edSmTRsNHDgw1WZ0lFLv/QAAQHphs6d2HT4AAEAm8eOPP6phw4YqXbq0du7cKZvNZnVIAAAA6QY9pQAAAFIgPj5ew4cPlyT179+fhBQAAMBtolIKAADgNkybNk0///yzNmzYoG3btqlixYr6888/k5ypDgAAADdGpRQAAMBtWL16taZPn64jR47o8ccf13fffUdCCgAAIAWolAIAAAAAAECao1IKAAAAAAAAaY5a8xRISEjQsWPHFBAQQFNTAAAAAACAq9jtdp0/f1758+eXl9eN66FISqXAsWPHVLBgQavDAAAAAAAA8FiHDx9WgQIFbrifpFQKBAQESDL/uDlz5rQ4GgAAAAAAAM8RHR2tggULJuZPboSkVAo4huzlzJmTpBQAAAAAAEASbtXyiEbnAAAAAAAASHMkpQAAAAAAAJDmSEoBAAAAAAAgzZGUAgAAAAAAQJojKQUAAAAAAIA0R1IKAAAAAAAAaY6kFAAAAAAAANIcSSkAAJAujBgxQjabzeVRpkyZ646z2+1q2rSpbDabFixY4LJvxYoVqlWrlgICAhQaGqoXX3xRV65cSdy/e/duPfjgg8qXL5/8/PxUrFgxDR06VHFxce6+PAAAgEzHx+oAAAAAkqt8+fL68ccfE9d9fK7/KPP222/LZrNdt33z5s1q1qyZXnnlFX322Wc6evSoevXqpfj4eL355puSpCxZsqhz586qUqWKgoKCtHnzZvXs2VMJCQl6/fXX3XdhAAAAmRBJKQAAkG74+PgoNDT0hvsjIiL01ltvacOGDQoLC3PZN3fuXFWqVEnDhg2TJJUoUULjx49X27ZtNXz4cAUEBKhYsWIqVqxY4nMKFy6sVatWac2aNe65IAAAgEyM4XsAACDd2LNnj/Lnz69ixYqpY8eOOnToUOK+S5cuqUOHDvrggw+STFzFxsbKz8/PZZu/v79iYmK0cePGJF9v7969Wrp0qR544IHUvRAAAACQlAIAAOlDjRo1NH36dC1dulRTpkzRgQMHVLduXZ0/f16SFB4erlq1aunRRx9N8vmNGzfW2rVrNXv2bMXHx+vo0aMaNWqUJOn48eMux9aqVUt+fn4qWbKk6tatm3gcAAAAUg/D9wAAQLrQtGnTxOVKlSqpRo0aKly4sObNm6eQkBD99NNP2rRp0w2f36hRI02YMEG9evXSk08+KV9fX7366qtas2aNvLxc79PNnTtX58+f1+bNmzVo0CC9+eabGjx4sNuuDQAAIDOy2e12u9VBpDfR0dEKDAxUVFSUcubMaXU4AABkWtWqVVODBg3077//6t1333VJLsXHx8vLy0t169bVqlWrErfb7XYdP35cuXLl0sGDB1WuXDn98ccfqlatWpKv8cUXX+jpp5/W+fPn5e3t7e5LAgAASPeSmzehUgoAAKRLFy5c0L59+/Tkk0+qbdu2euqpp1z2V6xYUZMmTVKLFi1ctttsNuXPn1+SNHv2bBUsWFBVqlS54eskJCQoLi5OCQkJJKUAAABSEUkpAACQLgwcOFAtWrRQ4cKFdezYMQ0fPlze3t5q3769QkJCkmxuXqhQIRUtWjRxfcKECWrSpIm8vLz09ddfa9y4cZo3b15ismnmzJnKkiWLKlasKF9fX23YsEFDhgxRu3btlCVLljS7VgAAgMyARucAcJtGjBghm83m8ihTpsx1x9ntdjVt2lQ2m00LFixw2Xft8202m+bMmeNyTGxsrF555RUVLlxYvr6+KlKkiD799FN3Xhrg0Y4cOaL27durdOnSatu2rYKDg/Xbb78pJCQk2edYsmSJ6tatq6pVq2rx4sX69ttv9dhjjyXu9/Hx0RtvvKHq1aurUqVKGjlypPr06aOPP/7YDVcEpA9p9Xdv5syZuvvuu5UtWzaFhYWpe/fuOnv2rDsvDQBgMSqlACAFypcvrx9//DFx3cfn+l+nb7/9tmw22w3PMW3aNDVp0iRxPSgoyGV/27ZtdfLkSX3yyScqUaKEjh8/roSEhDsPHkinrv0CeytJtc386aefbvqcdu3aqV27drf1OkBm4O6/e7/++qs6d+6cOOT26NGj6tWrl3r27Kmvv/46dS4CAOBxSEoBQAr4+PgkOVTIISIiQm+99ZY2bNigsLCwJI8JCgq64TmWLl2q1atXa//+/cqdO7ckqUiRInccNwAAKeHuv3vr1q1TkSJF1K9fP0lS0aJF9cwzz+iNN9648+ABAB6L4XvpXGqUUzucPXtWBQoUkM1mU2RkZJLH/Prrr/Lx8dE999yTehcBpEN79uxR/vz5VaxYMXXs2FGHDh1K3Hfp0iV16NBBH3zwwU0/wPfu3Vt58uRR9erV9emnn7pUdSxcuFBVq1bV+PHjddddd6lUqVIaOHCg/v33X7deFwAASXH3372aNWvq8OHD+v7772W323Xy5El9+eWXatasmVuvCwBgLSqlMoDUKKeWpB49eqhSpUo6evRokvsjIyPVuXNnPfTQQzp58uSdBQ2kYzVq1ND06dNVunRpHT9+XCNHjlTdunW1bds2BQQEKDw8XLVq1dKjjz56w3OMGjVK9evXV7Zs2bRs2TI999xzunDhQuId4v379+uXX36Rn5+fvvnmG505c0bPPfeczp49q2nTpqXVpQIAkCZ/92rXrq2ZM2eqXbt2iomJ0ZUrV9SiRQt98MEHaXWZAAALkJTKAFKjnHrKlCmKjIzUsGHDtGTJkiSP6dWrlzp06CBvb+8bVlsBmUHTpk0TlytVqqQaNWqocOHCmjdvnkJCQvTTTz9p06ZNNz3Hq6++mrhcuXJlXbx4URMmTEj8cJ6QkCCbzaaZM2cqMDBQkjRx4kS1bt1akydPlr+/vxuuDACA66XF370dO3bo+eef17Bhw9S4cWMdP35cgwYNUq9evfTJJ5+458IAAJZj+F4GcKfl1Dt27NCoUaP02Wefycsr6R+JadOmaf/+/Ro+fLhbrgFIz4KCglSqVCnt3btXP/30k/bt26egoCD5+PgkVi62atVK9erVu+E5atSooSNHjig2NlaSFBYWprvuuisxISVJZcuWld1u15EjR9x6PQAA3Iw7/u6NHTtWtWvX1qBBg1SpUiU1btxYkydP1qeffqrjx4+nxWUBACxAUiqdc5RTL126VFOmTNGBAwdUt25dnT9/XpJuWU4dGxur9u3ba8KECSpUqFCSx+zZs0cvvfSSvvjiiySHBgKZ3YULF7Rv3z6FhYXppZde0pYtWxQREZH4kKRJkybddNhdRESEcuXKJV9fX0lmGMOxY8d04cKFxGP++usveXl5qUCBAm69HgAAbsYdf/cuXbp03c1Rb29vSUnPpAkAyBjIMKRzd1pOPWTIEJUtW1adOnVKcn98fLw6dOigkSNHqlSpUqkeP5AeDRw4UC1atFDhwoV17NgxDR8+XN7e3mrfvr1CQkKSrEosVKiQihYtKklatGiRTp48qfvuu09+fn5avny5Xn/9dQ0cODDx+A4dOmj06NHq1q2bRo4cqTNnzmjQoEHq3r07Q/cAAGkqLf7utWjRQj179tSUKVMSh++98MILql69uvLnz59m1woASFskpTKYq8upt27dmlhOfbVWrVqpbt26WrVqlX766Sdt3bpVX375pSTnnag8efLolVdeUXh4uDZs2KBNmzapT58+kkyvG7vdLh8fHy1btkz169dP02sErHbkyBG1b99eZ8+eVUhIiOrUqaPffvtNISEhyXp+lixZ9MEHHyg8PFx2u10lSpTQxIkT1bNnz8RjcuTIoeXLl6tv376qWrWqgoOD1bZtW40ZM8ZdlwUAQJLS4u9e165ddf78eb3//vsaMGCAgoKCVL9+fb3xxhvuuiwAgAew2amHvW3R0dEKDAxUVFSUcubMaXU4Li5cuKBChQppxIgRatu2rc6cOeOyv2LFinrnnXfUokULFS1aVPv27XOZYn79+vXq3r271q5dq+LFiytPnjzasWOHyzkmT56sn376SV9++aWKFi2q7Nmzp8m1AQAAAAAAz5fcvAmVUuncnZZTFy9e3GWfI4lVtmzZxAqrChUquByTN29e+fn5XbcdAAAAAAAguUhKpXN3Wk4NAAAAAABgBYbvpYAnD98DAAAAAACwUnLzJl433AMAAAAASLdGjBghm83m8ihTpkzi/meeeUbFixeXv7+/QkJC9Oijj2rXrl0u51ixYoVq1aqlgIAAhYaG6sUXX9SVK1dcjpk3b57uueceZcuWTYULF9aECRPS5PoApH8elZS61S/NevXqXbe/V69eLuc4dOiQmjdvrmzZsilv3rwaNGjQdb80V61apSpVqsjX11clSpTQ9OnT0+LyAAAAACBNlS9fXsePH098/PLLL4n77r33Xk2bNk07d+7UDz/8ILvdrkaNGik+Pl6StHnzZjVr1kxNmjTRpk2bNHfuXC1cuFAvvfRS4jmWLFmijh07qlevXtq2bZsmT56sSZMm6f3330/zawWQ/nhcT6ny5cvrxx9/TFz38XENsWfPnho1alTierZs2RKX4+Pj1bx5c4WGhmrt2rU6fvy4OnfurCxZsuj111+XJB04cEDNmzdXr169NHPmTK1YsUJPPfWUwsLC1LhxYzdfHQAASHMXL0pZskiRkVJQkBQXJzFzLIBMwsfHJ8nJjyTp6aefTlwuUqSIxowZo7vvvlsHDx5U8eLFNXfuXFWqVEnDhg2TJJUoUULjx49X27ZtNXz4cAUEBOjzzz/XY489llgsUKxYMQ0ZMkRvvPGGevfuLZvN5v6LBJBueVSllOT8pel45MmTx2V/tmzZXPZfPTZx2bJl2rFjh7744gvdc889atq0qUaPHq0PPvhAly9fliRNnTpVRYsW1VtvvaWyZcuqT58+at26tSZNmnTDmGJjYxUdHe3yAAAA6UBMjDR+vJQvn/MxfrzZDgCZwJ49e5Q/f34VK1ZMHTt21KFDh5I87uLFi5o2bZqKFi2qggULSjLfg/z8/FyO8/f3V0xMjDZu3HjTY44cOaK///7bDVcEICPxuKTUrX5pzpw5U3ny5FGFChU0ZMgQXbp0KXHfunXrVLFiReXLly9xW+PGjRUdHa3t27cnHtOgQQOXczZu3Fjr1q27YUxjx45VYGBg4sPxSxoAAHiwixelsWOlUaNMlZRk/jtqlNl+8aKV0QGA29WoUUPTp0/X0qVLNWXKFB04cEB169bV+fPnE4+ZPHmycuTIoRw5cmjJkiVavny5smbNKsl8T1q7dq1mz56t+Ph4HT16NHHUyvHjxxOP+frrr7VixQolJCTor7/+0ltvveVyDADciEclpW71S7NDhw764osvtHLlSg0ZMkSff/65OnXqlPj8EydOuCSkJCWunzhx4qbHREdH699//00yriFDhigqKirxcfjw4VS7ZgAA4CZZskjvvpv0vnffNfsBIANr2rSp2rRpo0qVKqlx48b6/vvvFRkZqXnz5iUe07FjR23atEmrV69WqVKl1LZtW8X8V03aqFEjTZgwQb169ZKvr69KlSqlZs2aSZK8vMxXyZ49e6pPnz56+OGHlTVrVt1333164oknXI4BgBvxqJ5STZs2TVyuVKmSatSoocKFC2vevHnq0aOHy5jnihUrKiwsTA899JD27dun4sWLuy0uX19f+fr6uu38AADADSIjnRVSSe07dUry85OuaRUAABlVUFCQSpUqpb179yZuc4wGKVmypO677z7lypVL33zzjdq3by9J6t+/v8LDw3X8+HHlypVLBw8e1JAhQ1SsWDFJks1m0xtvvKHXX39dJ06cUEhIiFasWCFJiccAwI14dOo6qV+aV6tRo4YkJe4PDQ3VyZMnXY5xrDua+93omJw5c8rf3z9V4wcAABbKmdM0Nk9KUJCUK5dUpYo0ZIj0zz9pGRkAWOLChQvat2+fwsLCktxvt9tlt9sVGxvrst1msyl//vzy9/fX7NmzVbBgQVWpUsXlGG9vb911113KmjWrZs+erZo1ayokJMRt1wIgY/DopNStfmlGRERIUuL+mjVrauvWrTp16lTiMcuXL1fOnDlVrly5xGMcmfurj6lZs6YbrgAAAKQ5u930jfrhB6lPn6SP6dNHWr5cOnxYGjdOKlpUev11+kwByFAGDhyo1atX6+DBg1q7dq0ef/xxeXt7q3379tq/f7/Gjh2rjRs36tChQ1q7dq3atGkjf3//xCF6kjRhwgRt3bpV27dv1+jRozVu3Di9++678vb2liSdOXNGU6dO1a5duxQREaHnn39e8+fP19tvv23RVQNITzwqKXWzX5r79u3T6NGjtXHjRh08eFALFy5U586ddf/996tSpUqSzJjncuXK6cknn9TmzZv1ww8/aOjQoerdu3fi8LtevXpp//79Gjx4sHbt2qXJkydr3rx5Cg8Pt/LSAQBAaoiPl559Vho+XHrpJalfP+nVV50VU0FB0rBh0ssvSzt3Sv8181VUlPTKK1Lx4tJ770nXVAkAQHp05MgRtW/fXqVLl1bbtm0VHBys3377TSEhIfLz89OaNWvUrFkzlShRQu3atVNAQIDWrl2rvHnzJp5jyZIlqlu3rqpWrarFixfr22+/1WOPPebyOjNmzFDVqlVVu3Ztbd++XatWrVL16tXT+GoBpEc2u91utzoIhyeeeEI///yzzp49q5CQENWpU0evvfaaihcvrsOHD6tTp07atm2bLl68qIIFC+rxxx/X0KFDlTNnzsRz/P3333r22We1atUqZc+eXV26dNG4cePk4+Nsn7Vq1SqFh4drx44dKlCggF599VV17do12XFGR0crMDBQUVFRLq8NAAAs9O+/UocO0oIFzm2ffiq1bWuamkdFSYGBUlyclD272X/okKmqmjZNSkhwPq9wYWnkSKlTJ+m/agAAAAAkT3LzJh6VlEovSEoBSLGLF82X48hIU7Fx9ZdjACl37pz0yCPSr7+a9SxZTKKpY8fkPX/3blNRNX++6/ayZaUxY6THH5dsttSNGcjo+JsHAJlWcvMmHjV8DwAytJgYafx4KV8+52P8eLMdQModPizVretMSOXIIS1enPyElCSVLi3Nmydt3ChdNRuwdu6UWrWSqlWTli0z/aoA3Bp/8wAAyUBSCgDSwsWL0tixZpiQY4r6yEizPnYszZWBlNq+XapZU9qxw6zn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Ug5m4HMZhFIAAAAAACDloFPKZRBKAQAAAACAlCNvXilDhthlOqWcGqEUAAAAAABIOWy2f0/hO3ZMun3b2npwX04VSo0bN05lypSRj4+PfHx8FBAQoF9//dWx/emnn5bNZov307Vr13i3cfLkSTVq1Ejp06dXjhw59N577ykqKirePqtXr1aFChXk5eWlwoULa+rUqclx9wAAAAAAQHKwh1IxMdLBg9bWgvvysLqAuPz9/fXZZ5+pSJEiMsZo2rRpevHFF/X333/rySeflCS98cYbGjx4sOM66dOndyxHR0erUaNGypkzpzZs2KCzZ8+qbdu28vT01KeffipJOnbsmBo1aqSuXbtq5syZWrlypV5//XXlypVLgYGByXuHAQAAAABA4rtzXKmyZa2rBfflVKHU888/H+/ykCFDNG7cOG3atMkRSqVPn145c+a85/WXLVumvXv3asWKFfLz81O5cuX08ccfq2/fvho4cKDSpEmj8ePHq0CBAhoxYoQkqUSJElq3bp2++uorQikAAAAAAFICZuBzCU51+l5c0dHRmjNnjm7evKmAgADH+pkzZypbtmwqVaqUgoKCdOvWLce2jRs3qnTp0vLz83OsCwwMVGhoqPbs2ePY59lnn433uwIDA7Vx48b71hIeHq7Q0NB4PwAAAAAAwEkxA59LcKpOKUnatWuXAgICFBYWJm9vby1cuFAl//+PqWXLlsqXL59y586tnTt3qm/fvjpw4IAWLFggSTp37ly8QEqS4/K5c+ceuE9oaKhu376tdOnS3VXT0KFDNWjQoES/rwAAAAAAIAkUKCClSSNFRNAp5cScLpQqVqyYtm/frpCQEP3www9q166d1qxZo5IlS6pz586O/UqXLq1cuXKpbt26OnLkiAoVKpRkNQUFBalPnz6Oy6GhocqbN2+S/T4AAAAAAPAYPDykYsWkXbukQ4ekyEjJ09PqqnAHpzt9L02aNCpcuLAqVqyooUOHqmzZsho1atQ9961ataok6fDhw5KknDlz6vz58/H2sV+2j0N1v318fHzu2SUlSV5eXo4ZAe0/AAAAAADAidnHlYqMlI4csbYW3JPThVJ3iomJUXh4+D23bd++XZKUK1cuSVJAQIB27dqlCxcuOPZZvny5fHx8HKcABgQEaOXKlfFuZ/ny5fHGrQIAAAAAAC6OcaWcnlOFUkFBQVq7dq2O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afPmzVq4cKGqVaum1q1bu8x7UdIEPJD9DeDRo0cdLfKSNHToUJ0+fVpff/21VaUhEVSqVElly5bVwoULJdH1ZqWJEydqw4YNio6Olru7u3744QdVr15dzzzzjKpWrar169crMjLS6jIhac2aNQoNDVXJkiUlSenTp9eYMWNUvHhxgikXlS1bNs2ZM0f79u2zuhT8h127dmnRokWaNWuW3nvvPWXMmFFp06ZVvXr1lDlzZsd+PPacw53BhP2DbY0aNbRt2zbt2bNHEsfLFcXExDjeN5YqVUru7u564okntHbtWp05c0bu7u4c1xTm2rVr+uKLLzR79mzHl6YeHh58fnAin3zyiYKCgrR582ZFRES4zOOQUAr3FPfJZezYsWrSpImaN2+ubdu26erVq8qWLZteeOEFbd68WTExMS7xx57a3esY5cyZU/nz59fcuXMl0fVmFWOMBg0apE6dOmnHjh3auXOn3n33XXXp0kXffvutPD091aFDB/3222+KiIiwutxUr3bt2ho3bpw8PDw0d+5crVu3Tt7e3vr6668JplzAncfDGKOaNWuqaNGi2rhxo6S7P0jDeYSEhMjDw0PPPPOMFi1apMaNG+urr77S66+/rpCQEC1evFgS3aVW27lzp6KiouTu7i5JWrZsmdatW+fYXqdOHTVs2FAfffSRQkNDOV4uxn4qrZubm06ePKnAwEDt3r1bbdu21U8//aQxY8bo7NmzHFcXd2fYlClTJk2fPl3169fXjh07NGXKFEmxnx94r+McFi9erHbt2un06dOaPn26bt686RLvRfkEinuyhxPDhw/XlStX1LVrV3l7e6tevXrq2rWrFi1apObNm2vWrFnasGEDLzouwH6MTp065Xhi8vDw0Keffqpt27ZpxowZVpaXahljZLPZdOzYMaVNm1adO3fWjh079Oqrr6pv376qX7++1q1bp0KFCumdd97R0qVLCaYsZO9Wc3Nz0+HDh/XFF19oyJAh+uuvv+4KpsaPH08w5YTsz4U3b950XC5SpIgqVKigTz75RGFhYY4P0rDWvR43/v7+stlsGjRokNq1a6fhw4erS5cukqS9e/dqxIgR2rlzZ3KXijgGDx6scuXKac2aNYqMjNSePXvUp08fvfjii+revbuWLl0qSXr99dcVHh6u/fv3S6Jb21XEHdtt8ODBatasmTZt2qQsWbKoX79+evHFF7V06VKNHTtW586dkyR16NBBu3btsrJsPKK4x/nQoUM6cuSITp8+rYIFC2rkyJEqXbq0ZsyYodmzZ0uKfS3lMZy87K+RZ8+e1fnz53XgwAFJ0pQpU1SnTh198803WrRokcLCwpz/vagB4oiOjnYsz58/32TLls3s3bvXsW7x4sXmgw8+MBkyZDAvv/yy8fDwMG3atDG3bt0yMTExVpSM/xD3mI4ePdpUqlTJtGzZ0hw5csSEhoYaY4xp06aNefPNN+/aH8kjIiLC8W/JkiWNzWYzL7zwwl2Pqfr165uSJUua+fPnO64Da3z00Udm+/btZt68eaZ+/fqmcePGZtOmTcYYY65fv27at29vqlWrZj755BOOlROaMGGCad68uVmxYoXj+Fy+fNlUrFjRjB071hhjeE2zWNzXovDwcMfytWvXTKtWrUz69OlN7969HevDwsJM48aNTdOmTXkdcwKBgYHG39/frFixwhhjzD///GOWLl1qqlSpYqpWrWpq165t1q5da3Lnzm26detmcbVIiPfff9/4+fmZn376yRw7dizetkGDBpny5cubevXqmdq1a5scOXKYyMhIawrFI4v7+vfRRx+ZUqVKmeLFixs/Pz/zzTffGGOMOXr0qGnYsKGpU6eOmT17tlWlplr2Y7Ro0SJTtWpVU6JECVO0aFHTr18/xz5NmzY1pUqVMrNmzTK3bt2yqtSHYjPGmSMzWOWHH37QgQMHlCZNGr333nuKjIyUp6enY/vx48c1efJkrVq1Snv37tW+ffvk5+fn6PqA8xk9erSuXr0qb29vLVu2TLt27VK9evXUqVMnXbp0SS1bttTmzZtVqlQpq0tNVeyPmatXrypz5syKjIxU7dq1dfToUf34448KCAiId1pltWrVFBkZqd9//13e3t4WVp66xP3GcOHChWrWrJn++usvVapUSQsWLNC4ceOUNm1a9e/fX1WrVtWNGzfUqlUr+fn5acKECTwvOpnhw4dr+/btmj9/vpo3b66nnnpK3bt3V8uWLeXm5qZZs2ZZXWKqFve9xPDhw7Vt2zbdvHlTgwYNUrly5fTnn3+qV69ecnd3V4MGDZQxY0b99NNPOn/+vLZt2yZPT894j1kkn7jvF5977jnt2rVLM2fOVK1ateTp6akrV67oxIkTGjhwoG7duqVt27YpKipKK1euVKVKlSyu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Asd931m7dm3TqFEjq0pMVAx4kQqNGTNG/fv3lySVLFlSuXLl0smTJxUdHa26detKki5duqS2bdtqwIABevnllyUp3ngbcC63b9/WzZs31bdvX5UrV04LFixQ48aNNWnSJFWuXFn9+vXTDz/8oAsXLqh06dJaunSp3Nzc7jlmAJLGE088oXHjxiksLEwHDhxwjFdjjFG9evW0fv16rVixQj/88IN+//13lStXztqCUxH748D+b6VKlfTmm2/q4sWLOnXqlCQpKipKklS/fn0VKVJEW7ZskSR5eHg4bocxpKwVHh4uSQoMDFTRokX1/vvvK0uWLJo4caKWLFmiXr166fr166pQoYLKly+vEydOqHPnzo7ru7u7W1V6qrJx40YdPHhQkjRy5Eh9+OGHOn78uGN7s2bNNGjQIP38888aOXKkYzyiv//+2zHGBqxj/n+8yTfeeENt27bVP//8o9dff10NGjTQV199penTp2vcuHH666+/FBkZqT/++EM9evTQlClTeN/hxOIelzlz5qhx48aKjIxUw4YN9eGHH+rMmTP6+uuvtWbNGknSrVu3lCdPHg0bNkzDhg2zqmw8InPHeLGtWrXS3Llz5eXlpU2bNsUbGy5r1qyqXr36PceiRdKz2WyqU6eOZs6cqUKFCmnnzp26ffu2PDw8HON4NWjQQFeuXLlrTFOXZHEohmR2/fp107dvX+Pn5xevW+PHH3802bNnN3PnzjU7d+40zz//vGnfvr1jO98gO5d7da1t377dnD171hw+fNg8+eST5quvvjLGxI7TkS5dOuPn52cWLVp03+sjeYwbN87YbDbz+eefcxycwOzZs02HDh3MgQMH4o3rdfbsWdO2bVuTLl26eN1SISEhpmDBgmb8+PFWlIs7rFq1yjHmhd2ZM2dMnjx5zOTJk83Zs2dN06ZNTY0aNcySJUvMlStXzOjRo83YsWMZE8MCnPaVMsR97ZoyZYqpXr26adGihQkNDTXz5883pUuXNjlz5jRFixY1Tz75pOMxxmuec4rbwbZy5UrzxhtvGHd3d/P66687Zr789ddfTe3atU3VqlVN27ZtzTPPPGMqVarkuC5dcM4v7jG6detWvG2zZs0yHh4e5p133jHnz583xsQO81K2bFnTu3fvZK0zNbvXc6S9Yypr1qymadOm5saNG4792rRpY+rWrWvCwsKSu9RE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vvvuA/e7deuWBg0aJEl6+umnk6Gy+GrUqCFJWrduncqXL+9Yv2fPHl27dk0eHh5av369ChQo4Ni2efNmRUREOK4LAABwJzqlAACAS2vQoIFat26tDh06KCgoSEuXLtWKFSt04cIFvfDCC7p9+7bVJd7XhQsXlClTJqvL+E+VKlVS2rRptW7dunjr169fr6xZs6pu3bp3bbNfJpQCAAD3QygFAABSnDp16uh///ufTpw4oe+//96xfufOnWrfvr0KFiyotGnTKmfOnOrYsaMuX77s2Of333+XzWbTwoUL77rdWbNmyWazaePGjQ/8/UePHtXLL7+sLFmyKH369HrqqacUHBzs2G4/9dAYo2+++cZxCuK9HD9+XNmzZ5ckDRo0yLHvwIED4+13+vRpNWnSRN7e3sqePbveffddRUdHx9snJiZGI0eO1JNPPqm0adPKz89PXbp00dWrVx94f9KkSaPKlStr/fr18davX79eAQEBql69+j23ZcqUSaVKlXrk3/3rr7+qZs2aypAhgzJmzKhGjRppz549D6xRkrZv367s2bPr6aef1o0bN/5zfwAAYC1CKQAAkCK1adNGkrRs2TLHuuXLl+vo0aPq0KGDxowZo1dffVVz5sxRw4YNZYyRFHt6XN68eTVz5sy7bnPmzJkqVKiQAgIC7vt7z58/r2rVqmnp0qV68803NWTIEIWFhemFF15wBF21atXSjBkzJEnPPfecZsyY4bh8p+zZs2vcuHGSpJdeesmxb9OmTR37REdHKzAwUFmzZtXw4cNVu3ZtjRgxQt9++2282+rSpYvee+89Va9eXaNGjVKHDh00c+ZMBQYGKjIy8oH/nzVq1NDp06d1/Phxx7r169erWrVqqlatmuNUPil2rKkNGzYoICBAbm5uj/S7Z8yYoUaNGsnb21uff/65/ve//2nv3r2qUaNGvN99p82bN6tOnToqX768fv31VwZBBwDAFRgAAAAXNGXKFCPJbN68+b77+Pr6mvLlyzsu37p16659Zs+ebSSZtWvXOtYFBQUZLy8vc+3aNce6CxcuGA8PD/PRRx89sK5evXoZSeaPP/5wrLt+/bopUKCAyZ8/v4mOjnasl2S6d+/+wNszxpiLFy8aSff83e3atTOSzODBg+OtL1++vKlYsZ4i2jkAAAc+SURBVKLj8h9//GEkmZkzZ8bb77fffrvn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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Table Age"],"metadata":{"id":"603po63n7F0E"}},{"cell_type":"code","source":["df_age = df_transaction.copy()\n","df_age.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"xObPe8ZV7Jb3","executionInfo":{"status":"ok","timestamp":1751974625466,"user_tz":-420,"elapsed":19,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5cd68a3d-172c-4dfb-a069-bc107542f573"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender  Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F 2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F 1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M 1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M 1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F 1951-11-02               62.21   \n","\n","        Date               Merchant Name     Category  DayOfWeek  Year  \\\n","0 2023-04-03               Smith-Russell     Cosmetic     Monday  2023   \n","1 2023-07-17      Peck, Spence and Young       Travel     Monday  2023   \n","2 2023-09-20                  Steele Inc     Clothing  Wednesday  2023   \n","3 2023-01-11  Wilson, Wilson and Russell     Cosmetic  Wednesday  2023   \n","4 2023-06-13               Palmer-Hinton  Electronics    Tuesday  2023   \n","\n","   Year_People  Day Month Name     Day Month  \n","0         2002    3      April       April 3  \n","1         1985   17       July       July 17  \n","2         1981   20  September  September 20  \n","3         1977   11    January    January 11  \n","4         1951   13       June       June 13  "],"text/html":["\n","  <div id=\"df-d8b3c1d5-6e21-47fa-9a91-14583f01315f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>DayOfWeek</th>\n","      <th>Year</th>\n","      <th>Year_People</th>\n","      <th>Day</th>\n","      <th>Month Name</th>\n","      <th>Day Month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>April</td>\n","      <td>April 3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>1985</td>\n","      <td>17</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1981</td>\n","      <td>20</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1977</td>\n","      <td>11</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Tuesday</td>\n","      <td>2023</td>\n","      <td>1951</td>\n","      <td>13</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8b3c1d5-6e21-47fa-9a91-14583f01315f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d8b3c1d5-6e21-47fa-9a91-14583f01315f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d8b3c1d5-6e21-47fa-9a91-14583f01315f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-bdcb62f7-3c00-44a6-b392-e8df31e7c6fc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bdcb62f7-3c00-44a6-b392-e8df31e7c6fc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-bdcb62f7-3c00-44a6-b392-e8df31e7c6fc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_age","summary":"{\n  \"name\": \"df_age\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1948-11-02 00:00:00\",\n        \"max\": \"2005-10-19 00:00:00\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20 00:00:00\",\n          \"2001-10-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_People\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# making a new column for knowing the age\n","df_age['Age'] = df_age['Year'] - df_age['Year_People']\n","df_age.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"5RaJI5Ck7T1c","executionInfo":{"status":"ok","timestamp":1751974628290,"user_tz":-420,"elapsed":99,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"90cc86c4-cb37-44bc-d8de-581114c12b77"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender  Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F 2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F 1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M 1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M 1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F 1951-11-02               62.21   \n","\n","        Date               Merchant Name     Category  DayOfWeek  Year  \\\n","0 2023-04-03               Smith-Russell     Cosmetic     Monday  2023   \n","1 2023-07-17      Peck, Spence and Young       Travel     Monday  2023   \n","2 2023-09-20                  Steele Inc     Clothing  Wednesday  2023   \n","3 2023-01-11  Wilson, Wilson and Russell     Cosmetic  Wednesday  2023   \n","4 2023-06-13               Palmer-Hinton  Electronics    Tuesday  2023   \n","\n","   Year_People  Day Month Name     Day Month  Age  \n","0         2002    3      April       April 3   21  \n","1         1985   17       July       July 17   38  \n","2         1981   20  September  September 20   42  \n","3         1977   11    January    January 11   46  \n","4         1951   13       June       June 13   72  "],"text/html":["\n","  <div id=\"df-f3dcefa2-0570-4004-bba0-c2b6bdf3d731\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>DayOfWeek</th>\n","      <th>Year</th>\n","      <th>Year_People</th>\n","      <th>Day</th>\n","      <th>Month Name</th>\n","      <th>Day Month</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>April</td>\n","      <td>April 3</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>1985</td>\n","      <td>17</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1981</td>\n","      <td>20</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1977</td>\n","      <td>11</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Tuesday</td>\n","      <td>2023</td>\n","      <td>1951</td>\n","      <td>13</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","      <td>72</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3dcefa2-0570-4004-bba0-c2b6bdf3d731')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3dcefa2-0570-4004-bba0-c2b6bdf3d731 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3dcefa2-0570-4004-bba0-c2b6bdf3d731');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-564af8b9-eaff-43ef-ab87-fc59a17a9a77\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-564af8b9-eaff-43ef-ab87-fc59a17a9a77')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-564af8b9-eaff-43ef-ab87-fc59a17a9a77 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_age","summary":"{\n  \"name\": \"df_age\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1948-11-02 00:00:00\",\n        \"max\": \"2005-10-19 00:00:00\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20 00:00:00\",\n          \"2001-10-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_People\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# making a new column to join the name and surname in one column\n","df_age['Real Name'] = df_age[['Name', 'Surname']].apply(lambda x: ' '.join(x), axis=1)\n","df_age.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"AHwq0F9I9r_q","executionInfo":{"status":"ok","timestamp":1751974630279,"user_tz":-420,"elapsed":549,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"099c57e4-28b5-4363-95ca-db3f2913e0de"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender  Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F 2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F 1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M 1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M 1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F 1951-11-02               62.21   \n","\n","        Date               Merchant Name     Category  DayOfWeek  Year  \\\n","0 2023-04-03               Smith-Russell     Cosmetic     Monday  2023   \n","1 2023-07-17      Peck, Spence and Young       Travel     Monday  2023   \n","2 2023-09-20                  Steele Inc     Clothing  Wednesday  2023   \n","3 2023-01-11  Wilson, Wilson and Russell     Cosmetic  Wednesday  2023   \n","4 2023-06-13               Palmer-Hinton  Electronics    Tuesday  2023   \n","\n","   Year_People  Day Month Name     Day Month  Age        Real Name  \n","0         2002    3      April       April 3   21   Sean Rodriguez  \n","1         1985   17       July       July 17   38  Michelle Phelps  \n","2         1981   20  September  September 20   42   Jacob Williams  \n","3         1977   11    January    January 11   46    Nathan Snyder  \n","4         1951   13       June       June 13   72    Crystal Knapp  "],"text/html":["\n","  <div id=\"df-1729c504-d159-4668-868e-5df9fd3c8d08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>DayOfWeek</th>\n","      <th>Year</th>\n","      <th>Year_People</th>\n","      <th>Day</th>\n","      <th>Month Name</th>\n","      <th>Day Month</th>\n","      <th>Age</th>\n","      <th>Real Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>April</td>\n","      <td>April 3</td>\n","      <td>21</td>\n","      <td>Sean Rodriguez</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>1985</td>\n","      <td>17</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","      <td>38</td>\n","      <td>Michelle Phelps</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1981</td>\n","      <td>20</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","      <td>42</td>\n","      <td>Jacob Williams</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1977</td>\n","      <td>11</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","      <td>46</td>\n","      <td>Nathan Snyder</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Tuesday</td>\n","      <td>2023</td>\n","      <td>1951</td>\n","      <td>13</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","      <td>72</td>\n","      <td>Crystal Knapp</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1729c504-d159-4668-868e-5df9fd3c8d08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1729c504-d159-4668-868e-5df9fd3c8d08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1729c504-d159-4668-868e-5df9fd3c8d08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b7ffcfd9-f718-4b3a-8bae-c28dce9b1eee\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7ffcfd9-f718-4b3a-8bae-c28dce9b1eee')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b7ffcfd9-f718-4b3a-8bae-c28dce9b1eee button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_age","summary":"{\n  \"name\": \"df_age\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1948-11-02 00:00:00\",\n        \"max\": \"2005-10-19 00:00:00\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20 00:00:00\",\n          \"2001-10-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_People\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# making definition to determine the range of age into group\n","def umur(x):\n","  if x <= 20:\n","    return 'Group <= 20'\n","  elif x <= 40:\n","    return 'Group 21 - 40'\n","  elif x <= 60:\n","    return 'Group 41 - 60'\n","  else:\n","    return 'Group > 60'"],"metadata":{"id":"LJH0FABIuD6_","executionInfo":{"status":"ok","timestamp":1751974631895,"user_tz":-420,"elapsed":3,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df_age['Age Group'] = df_age['Age'].apply(umur)\n","df_age.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"STDrfJ-NuhWY","executionInfo":{"status":"ok","timestamp":1751974632986,"user_tz":-420,"elapsed":323,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"e5b9dde3-6114-4a3c-8726-6fc2b1623182"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID      Name    Surname Gender  Birthdate  Transaction Amount  \\\n","0       752858      Sean  Rodriguez      F 2002-10-20               35.47   \n","1        26381  Michelle     Phelps      F 1985-10-24             2552.72   \n","2       305449     Jacob   Williams      M 1981-10-25              115.97   \n","3       988259    Nathan     Snyder      M 1977-10-26               11.31   \n","4       764762   Crystal      Knapp      F 1951-11-02               62.21   \n","\n","        Date               Merchant Name     Category  DayOfWeek  Year  \\\n","0 2023-04-03               Smith-Russell     Cosmetic     Monday  2023   \n","1 2023-07-17      Peck, Spence and Young       Travel     Monday  2023   \n","2 2023-09-20                  Steele Inc     Clothing  Wednesday  2023   \n","3 2023-01-11  Wilson, Wilson and Russell     Cosmetic  Wednesday  2023   \n","4 2023-06-13               Palmer-Hinton  Electronics    Tuesday  2023   \n","\n","   Year_People  Day Month Name     Day Month  Age        Real Name  \\\n","0         2002    3      April       April 3   21   Sean Rodriguez   \n","1         1985   17       July       July 17   38  Michelle Phelps   \n","2         1981   20  September  September 20   42   Jacob Williams   \n","3         1977   11    January    January 11   46    Nathan Snyder   \n","4         1951   13       June       June 13   72    Crystal Knapp   \n","\n","       Age Group  \n","0  Group 21 - 40  \n","1  Group 21 - 40  \n","2  Group 41 - 60  \n","3  Group 41 - 60  \n","4     Group > 60  "],"text/html":["\n","  <div id=\"df-3e564658-5ae0-4eab-8a5c-8b8d48baf40d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Name</th>\n","      <th>Surname</th>\n","      <th>Gender</th>\n","      <th>Birthdate</th>\n","      <th>Transaction Amount</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>DayOfWeek</th>\n","      <th>Year</th>\n","      <th>Year_People</th>\n","      <th>Day</th>\n","      <th>Month Name</th>\n","      <th>Day Month</th>\n","      <th>Age</th>\n","      <th>Real Name</th>\n","      <th>Age Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean</td>\n","      <td>Rodriguez</td>\n","      <td>F</td>\n","      <td>2002-10-20</td>\n","      <td>35.47</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>2002</td>\n","      <td>3</td>\n","      <td>April</td>\n","      <td>April 3</td>\n","      <td>21</td>\n","      <td>Sean Rodriguez</td>\n","      <td>Group 21 - 40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle</td>\n","      <td>Phelps</td>\n","      <td>F</td>\n","      <td>1985-10-24</td>\n","      <td>2552.72</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Monday</td>\n","      <td>2023</td>\n","      <td>1985</td>\n","      <td>17</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","      <td>38</td>\n","      <td>Michelle Phelps</td>\n","      <td>Group 21 - 40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob</td>\n","      <td>Williams</td>\n","      <td>M</td>\n","      <td>1981-10-25</td>\n","      <td>115.97</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1981</td>\n","      <td>20</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","      <td>42</td>\n","      <td>Jacob Williams</td>\n","      <td>Group 41 - 60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan</td>\n","      <td>Snyder</td>\n","      <td>M</td>\n","      <td>1977-10-26</td>\n","      <td>11.31</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Wednesday</td>\n","      <td>2023</td>\n","      <td>1977</td>\n","      <td>11</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","      <td>46</td>\n","      <td>Nathan Snyder</td>\n","      <td>Group 41 - 60</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal</td>\n","      <td>Knapp</td>\n","      <td>F</td>\n","      <td>1951-11-02</td>\n","      <td>62.21</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Tuesday</td>\n","      <td>2023</td>\n","      <td>1951</td>\n","      <td>13</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","      <td>72</td>\n","      <td>Crystal Knapp</td>\n","      <td>Group &gt; 60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e564658-5ae0-4eab-8a5c-8b8d48baf40d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e564658-5ae0-4eab-8a5c-8b8d48baf40d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e564658-5ae0-4eab-8a5c-8b8d48baf40d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-bde460a0-9add-4a7e-afdc-c0848cebb0ff\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bde460a0-9add-4a7e-afdc-c0848cebb0ff')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-bde460a0-9add-4a7e-afdc-c0848cebb0ff button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_age","summary":"{\n  \"name\": \"df_age\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 690,\n        \"samples\": [\n          \"Jake\",\n          \"Carl\",\n          \"Gina\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          \"Sutton\",\n          \"Everett\",\n          \"Gilbert\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Birthdate\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1948-11-02 00:00:00\",\n        \"max\": \"2005-10-19 00:00:00\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"2002-10-20 00:00:00\",\n          \"2001-10-20 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DayOfWeek\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Monday\",\n          \"Wednesday\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year_People\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df_age_extract = df_age[['Customer ID', 'Real Name', 'Gender', 'Transaction Amount', 'Age', 'Date', 'Year', 'Month Name', 'Merchant Name', 'Category', 'Age Group']]\n","df_age_extract.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7-NiOe8J8_J7","executionInfo":{"status":"ok","timestamp":1751974714852,"user_tz":-420,"elapsed":232,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"e04550bc-4366-4be2-e925-a292a9e834a7"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID        Real Name Gender  Transaction Amount  Age       Date  \\\n","0       752858   Sean Rodriguez      F               35.47   21 2023-04-03   \n","1        26381  Michelle Phelps      F             2552.72   38 2023-07-17   \n","2       305449   Jacob Williams      M              115.97   42 2023-09-20   \n","3       988259    Nathan Snyder      M               11.31   46 2023-01-11   \n","4       764762    Crystal Knapp      F               62.21   72 2023-06-13   \n","\n","   Year Month Name               Merchant Name     Category      Age Group  \n","0  2023      April               Smith-Russell     Cosmetic  Group 21 - 40  \n","1  2023       July      Peck, Spence and Young       Travel  Group 21 - 40  \n","2  2023  September                  Steele Inc     Clothing  Group 41 - 60  \n","3  2023    January  Wilson, Wilson and Russell     Cosmetic  Group 41 - 60  \n","4  2023       June               Palmer-Hinton  Electronics     Group > 60  "],"text/html":["\n","  <div id=\"df-9e33c687-bd87-4fc3-b325-66fa14c40daa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Year</th>\n","      <th>Month Name</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean Rodriguez</td>\n","      <td>F</td>\n","      <td>35.47</td>\n","      <td>21</td>\n","      <td>2023-04-03</td>\n","      <td>2023</td>\n","      <td>April</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle Phelps</td>\n","      <td>F</td>\n","      <td>2552.72</td>\n","      <td>38</td>\n","      <td>2023-07-17</td>\n","      <td>2023</td>\n","      <td>July</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>2023</td>\n","      <td>September</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan Snyder</td>\n","      <td>M</td>\n","      <td>11.31</td>\n","      <td>46</td>\n","      <td>2023-01-11</td>\n","      <td>2023</td>\n","      <td>January</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal Knapp</td>\n","      <td>F</td>\n","      <td>62.21</td>\n","      <td>72</td>\n","      <td>2023-06-13</td>\n","      <td>2023</td>\n","      <td>June</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Group &gt; 60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e33c687-bd87-4fc3-b325-66fa14c40daa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e33c687-bd87-4fc3-b325-66fa14c40daa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e33c687-bd87-4fc3-b325-66fa14c40daa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-69292933-5385-4638-8f0e-e2467d96e33f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69292933-5385-4638-8f0e-e2467d96e33f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-69292933-5385-4638-8f0e-e2467d96e33f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_age_extract","summary":"{\n  \"name\": \"df_age_extract\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\",\n          \"Renee Anderson\",\n          \"Sara Perkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["a = df_age_extract['Transaction Amount']\n","np.percentile(a, 50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1mnzVtvDu33","executionInfo":{"status":"ok","timestamp":1747925237518,"user_tz":-420,"elapsed":13,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"14373fe3-d911-4593-bd54-645165bbd596"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(182.195)"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["a.quantile(0.5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yzSFzPo7G6db","executionInfo":{"status":"ok","timestamp":1747925238607,"user_tz":-420,"elapsed":31,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"f409af6f-f628-437d-df54-48fbdfc5ebdb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(182.195)"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["# Tabel RFM"],"metadata":{"id":"UM-2PEmE_j1T"}},{"cell_type":"code","source":["df_rfm = df_age_extract.groupby('Real Name').agg(Last_Transaction = ('Date','max') , Frequency = ('Customer ID', 'nunique') , Monetary = ('Transaction Amount', 'sum')).reset_index()\n","df_rfm.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"VW6XiO2s_CI3","executionInfo":{"status":"ok","timestamp":1747925252910,"user_tz":-420,"elapsed":389,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"bb03e3a6-2d5d-4c25-aeed-328fc3328b1d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary\n","0      Aaron Adams       2023-10-05          2   1173.85\n","1      Aaron Allen       2023-08-10          2    159.52\n","2    Aaron Andrews       2023-07-17          1    119.70\n","3     Aaron Archer       2023-02-25          1    276.96\n","4  Aaron Armstrong       2023-02-24          1   2300.65\n","5     Aaron Arroyo       2023-09-23          1    589.22\n","6    Aaron Baldwin       2023-01-06          1     10.33\n","7     Aaron Barber       2023-04-22          1    120.00\n","8     Aaron Barker       2023-09-06          1    124.48\n","9     Aaron Barnes       2023-09-27          2    422.76"],"text/html":["\n","  <div id=\"df-b8879266-39b6-48ed-8425-8be88c987d11\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Aaron Arroyo</td>\n","      <td>2023-09-23</td>\n","      <td>1</td>\n","      <td>589.22</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Aaron Baldwin</td>\n","      <td>2023-01-06</td>\n","      <td>1</td>\n","      <td>10.33</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Aaron Barber</td>\n","      <td>2023-04-22</td>\n","      <td>1</td>\n","      <td>120.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Aaron Barker</td>\n","      <td>2023-09-06</td>\n","      <td>1</td>\n","      <td>124.48</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Aaron Barnes</td>\n","      <td>2023-09-27</td>\n","      <td>2</td>\n","      <td>422.76</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8879266-39b6-48ed-8425-8be88c987d11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b8879266-39b6-48ed-8425-8be88c987d11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b8879266-39b6-48ed-8425-8be88c987d11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e61aa394-9c10-4e88-b488-561c95713db7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e61aa394-9c10-4e88-b488-561c95713db7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e61aa394-9c10-4e88-b488-561c95713db7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["from datetime import date\n","df_rfm['Today Date'] = date.today()\n","df_rfm['Today Date']= pd.to_datetime(df_rfm['Today Date'])\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HoC4Gp3OCtRJ","executionInfo":{"status":"ok","timestamp":1747925262053,"user_tz":-420,"elapsed":126,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"cf6ccfd5-d891-4e91-f06d-94a8d233aa10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22\n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22\n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22\n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22\n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22"],"text/html":["\n","  <div id=\"df-b9ea63ce-7c0c-4628-93c0-bfe4c1c09f1f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9ea63ce-7c0c-4628-93c0-bfe4c1c09f1f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b9ea63ce-7c0c-4628-93c0-bfe4c1c09f1f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b9ea63ce-7c0c-4628-93c0-bfe4c1c09f1f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4e8af037-4a8f-49a5-a26a-baff4dfc180d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e8af037-4a8f-49a5-a26a-baff4dfc180d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4e8af037-4a8f-49a5-a26a-baff4dfc180d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["df_rfm.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbJdrth2WK-c","executionInfo":{"status":"ok","timestamp":1747925264255,"user_tz":-420,"elapsed":83,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"202adf24-e8ab-4eec-9485-1437f6d2bf7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 39545 entries, 0 to 39544\n","Data columns (total 5 columns):\n"," #   Column            Non-Null Count  Dtype         \n","---  ------            --------------  -----         \n"," 0   Real Name         39545 non-null  object        \n"," 1   Last_Transaction  39545 non-null  datetime64[ns]\n"," 2   Frequency         39545 non-null  int64         \n"," 3   Monetary          39545 non-null  float64       \n"," 4   Today Date        39545 non-null  datetime64[ns]\n","dtypes: datetime64[ns](2), float64(1), int64(1), object(1)\n","memory usage: 1.5+ MB\n"]}]},{"cell_type":"code","source":["df_rfm['Recency'] = df_rfm['Today Date'] - df_rfm['Last_Transaction']\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UNFrY7gOWjVc","executionInfo":{"status":"ok","timestamp":1747925265860,"user_tz":-420,"elapsed":87,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"505fe755-7a83-45ab-a0a0-9ddd2859fd96"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days\n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days\n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days\n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days\n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days"],"text/html":["\n","  <div id=\"df-9bb2715c-d178-4b67-9b4c-1a14429521de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bb2715c-d178-4b67-9b4c-1a14429521de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9bb2715c-d178-4b67-9b4c-1a14429521de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9bb2715c-d178-4b67-9b4c-1a14429521de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a8d84d8c-0c95-4d0c-94f0-0859aea26e5e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8d84d8c-0c95-4d0c-94f0-0859aea26e5e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a8d84d8c-0c95-4d0c-94f0-0859aea26e5e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["q1 = df_rfm['Recency'].quantile(0.20)\n","q2 = df_rfm['Recency'].quantile(0.40)\n","q3 = df_rfm['Recency'].quantile(0.60)\n","q4 = df_rfm['Recency'].quantile(0.80)\n","\n","def r_score(x):\n","    if x <= q1:\n","        return 5\n","    elif x <= q2:\n","        return 4\n","    elif x <= q3:\n","        return 3\n","    elif x <= q4:\n","        return 2\n","    else:\n","        return 1"],"metadata":{"id":"7arzptfyqFE3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Hitung quantile sekali saja\n","#quantiles = df_rfm['Recency'].quantile([0.20, 0.40, 0.60, 0.80])\n","# Terapkan fungsi ke kolom 'Recency'\n","df_rfm['R Score'] = df_rfm['Recency'].apply(r_score)\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bF3aqZj4HLsL","executionInfo":{"status":"ok","timestamp":1747925269529,"user_tz":-420,"elapsed":520,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"0de27e4f-fd30-4e8a-bcab-5bd505350111"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days   \n","\n","   R Score  \n","0        5  \n","1        4  \n","2        4  \n","3        1  \n","4        1  "],"text/html":["\n","  <div id=\"df-de48dd7a-38e3-472c-bb1c-c8e53447a59f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de48dd7a-38e3-472c-bb1c-c8e53447a59f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de48dd7a-38e3-472c-bb1c-c8e53447a59f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de48dd7a-38e3-472c-bb1c-c8e53447a59f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-da56cfab-de34-4b2e-8ad8-75ace4cfbd0b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da56cfab-de34-4b2e-8ad8-75ace4cfbd0b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-da56cfab-de34-4b2e-8ad8-75ace4cfbd0b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#q11 = df_rfm['Frequency'].quantile(0.80)\n","#q21 = df_rfm['Frequency'].quantile(0.60)\n","#q31 = df_rfm['Frequency'].quantile(0.40)\n","#q41 = df_rfm['Frequency'].quantile(0.20)\n","\n","def f_score(x):\n","    if x >= 8:\n","        return 5\n","    elif x >= 6:\n","        return 4\n","    elif x >= 4:\n","        return 3\n","    elif x >= 2:\n","        return 2\n","    else:\n","        return 1"],"metadata":{"id":"VHxWzqcsQyiX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Terapkan fungsi ke kolom 'Recency'\n","df_rfm['F Score'] = df_rfm['Frequency'].apply(f_score)\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YcQqnWY0Q7tu","executionInfo":{"status":"ok","timestamp":1747925273109,"user_tz":-420,"elapsed":124,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"717b9a80-bb4e-4056-da53-6140f381b2af"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days   \n","\n","   R Score  F Score  \n","0        5        2  \n","1        4        2  \n","2        4        1  \n","3        1        1  \n","4        1        1  "],"text/html":["\n","  <div id=\"df-d33fb38d-0680-4f08-aa80-69d679b71b03\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","      <th>F Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","      <td>5</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d33fb38d-0680-4f08-aa80-69d679b71b03')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d33fb38d-0680-4f08-aa80-69d679b71b03 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d33fb38d-0680-4f08-aa80-69d679b71b03');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4b886556-75be-42c7-a4ce-dc691cb3e84a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b886556-75be-42c7-a4ce-dc691cb3e84a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4b886556-75be-42c7-a4ce-dc691cb3e84a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["q12 = df_rfm['Monetary'].quantile(0.80)\n","q22 = df_rfm['Monetary'].quantile(0.60)\n","q32 = df_rfm['Monetary'].quantile(0.40)\n","q42 = df_rfm['Monetary'].quantile(0.20)\n","\n","def m_score(x):\n","    if x >= q12:\n","        return 5\n","    elif x >= q22:\n","        return 4\n","    elif x >= q32:\n","        return 3\n","    elif x >= q42:\n","        return 2\n","    else:\n","        return 1"],"metadata":{"id":"ANDkRj90yqTy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Hitung quantile sekali saja\n","#quantiles_2 = df_rfm['Monetary'].quantile([0.20, 0.40, 0.60, 0.80])\n","\n","# Terapkan fungsi ke kolom 'Recency'\n","df_rfm['M Score'] = df_rfm['Monetary'].apply(m_score)\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OLSUAG30RozL","executionInfo":{"status":"ok","timestamp":1747925276973,"user_tz":-420,"elapsed":105,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"2015e319-59c7-4748-e037-0e656469924c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days   \n","\n","   R Score  F Score  M Score  \n","0        5        2        5  \n","1        4        2        2  \n","2        4        1        2  \n","3        1        1        3  \n","4        1        1        5  "],"text/html":["\n","  <div id=\"df-b9299c5a-da2b-4246-acbd-19d2ab6aab6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","      <th>F Score</th>\n","      <th>M Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9299c5a-da2b-4246-acbd-19d2ab6aab6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b9299c5a-da2b-4246-acbd-19d2ab6aab6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b9299c5a-da2b-4246-acbd-19d2ab6aab6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5ce60b8d-bc0c-4d77-945b-9dcdfbfefead\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ce60b8d-bc0c-4d77-945b-9dcdfbfefead')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5ce60b8d-bc0c-4d77-945b-9dcdfbfefead button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["df_rfm['RFM Score'] = df_rfm['R Score'].astype(str) + df_rfm['F Score'].astype(str) + df_rfm['M Score'].astype(str)\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZfC1T3dRzTdB","executionInfo":{"status":"ok","timestamp":1747925280046,"user_tz":-420,"elapsed":141,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"22803658-1bdf-4518-f67a-c194fdf6669f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days   \n","\n","   R Score  F Score  M Score RFM Score  \n","0        5        2        5       525  \n","1        4        2        2       422  \n","2        4        1        2       412  \n","3        1        1        3       113  \n","4        1        1        5       115  "],"text/html":["\n","  <div id=\"df-27b3c7d2-2bac-4f22-b92d-86a14ea2176f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","      <th>F Score</th>\n","      <th>M Score</th>\n","      <th>RFM Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>525</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>422</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>412</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>113</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>115</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27b3c7d2-2bac-4f22-b92d-86a14ea2176f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27b3c7d2-2bac-4f22-b92d-86a14ea2176f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27b3c7d2-2bac-4f22-b92d-86a14ea2176f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e86cdce4-6372-4668-92cc-1d3030c08950\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e86cdce4-6372-4668-92cc-1d3030c08950')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e86cdce4-6372-4668-92cc-1d3030c08950 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"115\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["def customer_segment(x):\n","  if x <= '555' and x >= '511':\n","    return 'Super Royal'\n","  elif x >= '451' and x <= '510':\n","    return 'Loyal'\n","  elif x >= '351' and x <= '450':\n","    return 'Member'\n","  elif x >= '151' and x <= '350':\n","    return 'Poor'\n","  else:\n","    return 'Uncategorized'"],"metadata":{"id":"7CpzzBkW5K8I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_rfm['Customer Segment'] = df_rfm['RFM Score'].apply(customer_segment)\n","df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"us-02ode7D-6","executionInfo":{"status":"ok","timestamp":1747925289001,"user_tz":-420,"elapsed":143,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"23267828-6052-4d03-8a6a-f66737e81f82"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-22 595 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-22 651 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-22 675 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-22 817 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-22 818 days   \n","\n","   R Score  F Score  M Score RFM Score Customer Segment  \n","0        5        2        5       525      Super Royal  \n","1        4        2        2       422           Member  \n","2        4        1        2       412           Member  \n","3        1        1        3       113    Uncategorized  \n","4        1        1        5       115    Uncategorized  "],"text/html":["\n","  <div id=\"df-4a11c582-2309-4e71-a1c1-ea8cdb35818a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","      <th>F Score</th>\n","      <th>M Score</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-22</td>\n","      <td>595 days</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>525</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-22</td>\n","      <td>651 days</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>422</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-22</td>\n","      <td>675 days</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>412</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-22</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>113</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-22</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a11c582-2309-4e71-a1c1-ea8cdb35818a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4a11c582-2309-4e71-a1c1-ea8cdb35818a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4a11c582-2309-4e71-a1c1-ea8cdb35818a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-cc696301-85f2-4c99-8685-53d58eab3522\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc696301-85f2-4c99-8685-53d58eab3522')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-cc696301-85f2-4c99-8685-53d58eab3522 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-22 00:00:00\",\n        \"max\": \"2025-05-22 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"115\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["df_rfm_1 = df_rfm[['Real Name', 'Recency', 'Frequency', 'Monetary', 'RFM Score', 'Customer Segment']]\n","df_rfm_1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wFVdZh9sPF2d","executionInfo":{"status":"ok","timestamp":1747925290859,"user_tz":-420,"elapsed":104,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"6a3f440c-5c74-4b04-a6a5-7c4cb85c3e79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name  Recency  Frequency  Monetary RFM Score Customer Segment\n","0      Aaron Adams 595 days          2   1173.85       525      Super Royal\n","1      Aaron Allen 651 days          2    159.52       422           Member\n","2    Aaron Andrews 675 days          1    119.70       412           Member\n","3     Aaron Archer 817 days          1    276.96       113    Uncategorized\n","4  Aaron Armstrong 818 days          1   2300.65       115    Uncategorized"],"text/html":["\n","  <div id=\"df-b09ce15b-970e-4cf8-b22a-61070b828374\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>595 days</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>525</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>651 days</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>422</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>675 days</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>412</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>113</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>818 days</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>115</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b09ce15b-970e-4cf8-b22a-61070b828374')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b09ce15b-970e-4cf8-b22a-61070b828374 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b09ce15b-970e-4cf8-b22a-61070b828374');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-37fefa66-87b4-4ef4-b404-89a8d1423e13\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37fefa66-87b4-4ef4-b404-89a8d1423e13')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-37fefa66-87b4-4ef4-b404-89a8d1423e13 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm_1","summary":"{\n  \"name\": \"df_rfm_1\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"603 days 00:00:00\",\n          \"764 days 00:00:00\",\n          \"852 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"115\",\n          \"455\",\n          \"215\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\",\n          \"Loyal\",\n          \"Uncategorized\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["df_rfm_1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-h8TaqRCQ3Yq","executionInfo":{"status":"ok","timestamp":1747925296026,"user_tz":-420,"elapsed":38,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"76c84ab4-08d1-4e76-d4dd-57055e447243"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 39545 entries, 0 to 39544\n","Data columns (total 6 columns):\n"," #   Column            Non-Null Count  Dtype          \n","---  ------            --------------  -----          \n"," 0   Real Name         39545 non-null  object         \n"," 1   Recency           39545 non-null  timedelta64[ns]\n"," 2   Frequency         39545 non-null  int64          \n"," 3   Monetary          39545 non-null  float64        \n"," 4   RFM Score         39545 non-null  object         \n"," 5   Customer Segment  39545 non-null  object         \n","dtypes: float64(1), int64(1), object(3), timedelta64[ns](1)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"code","source":["df_combine = pd.merge(df_age_extract,df_rfm_1, on='Real Name', how = 'left')\n","df_combine.head(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"R_YKWp2JOpI-","executionInfo":{"status":"ok","timestamp":1747926016479,"user_tz":-420,"elapsed":480,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"161212ef-3805-4243-9992-18748590b88c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Customer ID             Real Name Gender  Transaction Amount  Age  \\\n","0        752858        Sean Rodriguez      F               35.47   21   \n","1         26381       Michelle Phelps      F             2552.72   38   \n","2        305449        Jacob Williams      M              115.97   42   \n","3        988259         Nathan Snyder      M               11.31   46   \n","4        764762         Crystal Knapp      F               62.21   72   \n","5        576539       Monica Bartlett      F               99.14   22   \n","6        124681           Thomas Shaw      F              145.94   47   \n","7        521807           Kelsey Pena      F              161.39   55   \n","8        504238         Denise Porter      M               77.73   66   \n","9        583532  Alexander Richardson      F              142.85   49   \n","10       924841         Kimberly Ball      M              928.68   47   \n","11       123235         Hunter Peters      M              387.78   52   \n","12       840546         Julie Russell      M              142.07   55   \n","13       516709    Christopher Harris      M              107.44   19   \n","14       683760           Amber Brown      M               54.31   19   \n","15       777948            Amy Pierce      F               79.57   57   \n","16       440706      Elizabeth Barnes      F              441.18   66   \n","17       793150            Chad Reese      F              475.82   61   \n","18        27213       Michelle Holden      M              106.26   74   \n","19       401993          Steven Smith      M             1468.14   24   \n","\n","         Date               Merchant Name     Category      Age Group  \\\n","0  2023-04-03               Smith-Russell     Cosmetic  Group 21 - 40   \n","1  2023-07-17      Peck, Spence and Young       Travel  Group 21 - 40   \n","2  2023-09-20                  Steele Inc     Clothing  Group 41 - 60   \n","3  2023-01-11  Wilson, Wilson and Russell     Cosmetic  Group 41 - 60   \n","4  2023-06-13               Palmer-Hinton  Electronics     Group > 60   \n","5  2023-08-24      Tran, Torres and Joyce     Cosmetic  Group 21 - 40   \n","6  2023-08-30   Evans, Griffin and Torres     Cosmetic  Group 41 - 60   \n","7  2023-02-08                  Miller PLC     Cosmetic  Group 41 - 60   \n","8  2023-01-12              Jackson-Morgan   Restaurant     Group > 60   \n","9  2023-06-07    Blake, Mays and Anderson     Clothing  Group 41 - 60   \n","10 2023-02-11     Miller, Walker and Bond       Travel  Group 41 - 60   \n","11 2023-09-24       Barker, Ortiz and Cox       Market  Group 41 - 60   \n","12 2023-08-07               Taylor-Morrow     Cosmetic  Group 41 - 60   \n","13 2023-04-22             Gonzalez-Hunter     Cosmetic    Group <= 20   \n","14 2023-04-10         Underwood-Contreras     Cosmetic    Group <= 20   \n","15 2023-01-05               Rodriguez Ltd   Restaurant  Group 41 - 60   \n","16 2023-02-28               Wilson-Zavala       Market     Group > 60   \n","17 2023-04-22                  Hughes Inc       Market     Group > 60   \n","18 2023-05-20               Morris-Foster     Cosmetic     Group > 60   \n","19 2023-05-14   Thompson, Lopez and Mason       Travel  Group 21 - 40   \n","\n","    Recency  Frequency  Monetary RFM Score Customer Segment  \n","0  780 days          1     35.47       211             Poor  \n","1  675 days          1   2552.72       415           Member  \n","2  610 days          1    115.97       512      Super Royal  \n","3  673 days          2    458.67       424           Member  \n","4  709 days          2    377.93       324             Poor  \n","5  637 days          1     99.14       412           Member  \n","6  631 days          2    896.98       525      Super Royal  \n","7  834 days          1    161.39       112    Uncategorized  \n","8  861 days          1     77.73       112    Uncategorized  \n","9  715 days          1    142.85       312             Poor  \n","10 831 days          1    928.68       115    Uncategorized  \n","11 606 days          1    387.78       514      Super Royal  \n","12 654 days          1    142.07       412           Member  \n","13 644 days          8   2240.15       455            Loyal  \n","14 730 days          3     97.22       322             Poor  \n","15 868 days          1     79.57       112    Uncategorized  \n","16 814 days          2    475.49       124    Uncategorized  \n","17 761 days          1    475.82       214             Poor  \n","18 733 days          1    106.26       312             Poor  \n","19 609 days          7   2436.54       545      Super Royal  "],"text/html":["\n","  <div id=\"df-877e0945-11c8-4c9f-94e1-37275a218031\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean Rodriguez</td>\n","      <td>F</td>\n","      <td>35.47</td>\n","      <td>21</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>780 days</td>\n","      <td>1</td>\n","      <td>35.47</td>\n","      <td>211</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle Phelps</td>\n","      <td>F</td>\n","      <td>2552.72</td>\n","      <td>38</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","      <td>675 days</td>\n","      <td>1</td>\n","      <td>2552.72</td>\n","      <td>415</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>610 days</td>\n","      <td>1</td>\n","      <td>115.97</td>\n","      <td>512</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan Snyder</td>\n","      <td>M</td>\n","      <td>11.31</td>\n","      <td>46</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>673 days</td>\n","      <td>2</td>\n","      <td>458.67</td>\n","      <td>424</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal Knapp</td>\n","      <td>F</td>\n","      <td>62.21</td>\n","      <td>72</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Group &gt; 60</td>\n","      <td>709 days</td>\n","      <td>2</td>\n","      <td>377.93</td>\n","      <td>324</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>576539</td>\n","      <td>Monica Bartlett</td>\n","      <td>F</td>\n","      <td>99.14</td>\n","      <td>22</td>\n","      <td>2023-08-24</td>\n","      <td>Tran, Torres and Joyce</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>637 days</td>\n","      <td>1</td>\n","      <td>99.14</td>\n","      <td>412</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>124681</td>\n","      <td>Thomas Shaw</td>\n","      <td>F</td>\n","      <td>145.94</td>\n","      <td>47</td>\n","      <td>2023-08-30</td>\n","      <td>Evans, Griffin and Torres</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>631 days</td>\n","      <td>2</td>\n","      <td>896.98</td>\n","      <td>525</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>521807</td>\n","      <td>Kelsey Pena</td>\n","      <td>F</td>\n","      <td>161.39</td>\n","      <td>55</td>\n","      <td>2023-02-08</td>\n","      <td>Miller PLC</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>834 days</td>\n","      <td>1</td>\n","      <td>161.39</td>\n","      <td>112</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>504238</td>\n","      <td>Denise Porter</td>\n","      <td>M</td>\n","      <td>77.73</td>\n","      <td>66</td>\n","      <td>2023-01-12</td>\n","      <td>Jackson-Morgan</td>\n","      <td>Restaurant</td>\n","      <td>Group &gt; 60</td>\n","      <td>861 days</td>\n","      <td>1</td>\n","      <td>77.73</td>\n","      <td>112</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>583532</td>\n","      <td>Alexander Richardson</td>\n","      <td>F</td>\n","      <td>142.85</td>\n","      <td>49</td>\n","      <td>2023-06-07</td>\n","      <td>Blake, Mays and Anderson</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>715 days</td>\n","      <td>1</td>\n","      <td>142.85</td>\n","      <td>312</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>924841</td>\n","      <td>Kimberly Ball</td>\n","      <td>M</td>\n","      <td>928.68</td>\n","      <td>47</td>\n","      <td>2023-02-11</td>\n","      <td>Miller, Walker and Bond</td>\n","      <td>Travel</td>\n","      <td>Group 41 - 60</td>\n","      <td>831 days</td>\n","      <td>1</td>\n","      <td>928.68</td>\n","      <td>115</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>123235</td>\n","      <td>Hunter Peters</td>\n","      <td>M</td>\n","      <td>387.78</td>\n","      <td>52</td>\n","      <td>2023-09-24</td>\n","      <td>Barker, Ortiz and Cox</td>\n","      <td>Market</td>\n","      <td>Group 41 - 60</td>\n","      <td>606 days</td>\n","      <td>1</td>\n","      <td>387.78</td>\n","      <td>514</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>840546</td>\n","      <td>Julie Russell</td>\n","      <td>M</td>\n","      <td>142.07</td>\n","      <td>55</td>\n","      <td>2023-08-07</td>\n","      <td>Taylor-Morrow</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>654 days</td>\n","      <td>1</td>\n","      <td>142.07</td>\n","      <td>412</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>516709</td>\n","      <td>Christopher Harris</td>\n","      <td>M</td>\n","      <td>107.44</td>\n","      <td>19</td>\n","      <td>2023-04-22</td>\n","      <td>Gonzalez-Hunter</td>\n","      <td>Cosmetic</td>\n","      <td>Group &lt;= 20</td>\n","      <td>644 days</td>\n","      <td>8</td>\n","      <td>2240.15</td>\n","      <td>455</td>\n","      <td>Loyal</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>683760</td>\n","      <td>Amber Brown</td>\n","      <td>M</td>\n","      <td>54.31</td>\n","      <td>19</td>\n","      <td>2023-04-10</td>\n","      <td>Underwood-Contreras</td>\n","      <td>Cosmetic</td>\n","      <td>Group &lt;= 20</td>\n","      <td>730 days</td>\n","      <td>3</td>\n","      <td>97.22</td>\n","      <td>322</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>777948</td>\n","      <td>Amy Pierce</td>\n","      <td>F</td>\n","      <td>79.57</td>\n","      <td>57</td>\n","      <td>2023-01-05</td>\n","      <td>Rodriguez Ltd</td>\n","      <td>Restaurant</td>\n","      <td>Group 41 - 60</td>\n","      <td>868 days</td>\n","      <td>1</td>\n","      <td>79.57</td>\n","      <td>112</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>440706</td>\n","      <td>Elizabeth Barnes</td>\n","      <td>F</td>\n","      <td>441.18</td>\n","      <td>66</td>\n","      <td>2023-02-28</td>\n","      <td>Wilson-Zavala</td>\n","      <td>Market</td>\n","      <td>Group &gt; 60</td>\n","      <td>814 days</td>\n","      <td>2</td>\n","      <td>475.49</td>\n","      <td>124</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>793150</td>\n","      <td>Chad Reese</td>\n","      <td>F</td>\n","      <td>475.82</td>\n","      <td>61</td>\n","      <td>2023-04-22</td>\n","      <td>Hughes Inc</td>\n","      <td>Market</td>\n","      <td>Group &gt; 60</td>\n","      <td>761 days</td>\n","      <td>1</td>\n","      <td>475.82</td>\n","      <td>214</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>27213</td>\n","      <td>Michelle Holden</td>\n","      <td>M</td>\n","      <td>106.26</td>\n","      <td>74</td>\n","      <td>2023-05-20</td>\n","      <td>Morris-Foster</td>\n","      <td>Cosmetic</td>\n","      <td>Group &gt; 60</td>\n","      <td>733 days</td>\n","      <td>1</td>\n","      <td>106.26</td>\n","      <td>312</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>401993</td>\n","      <td>Steven Smith</td>\n","      <td>M</td>\n","      <td>1468.14</td>\n","      <td>24</td>\n","      <td>2023-05-14</td>\n","      <td>Thompson, Lopez and Mason</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","      <td>609 days</td>\n","      <td>7</td>\n","      <td>2436.54</td>\n","      <td>545</td>\n","      <td>Super Royal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-877e0945-11c8-4c9f-94e1-37275a218031')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-877e0945-11c8-4c9f-94e1-37275a218031 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-877e0945-11c8-4c9f-94e1-37275a218031');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d8826a34-d14c-4757-9e6d-d6b3abcf32bc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8826a34-d14c-4757-9e6d-d6b3abcf32bc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d8826a34-d14c-4757-9e6d-d6b3abcf32bc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_combine","summary":"{\n  \"name\": \"df_combine\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\",\n          \"Renee Anderson\",\n          \"Sara Perkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\",\n          \"Group <= 20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"715 days 00:00:00\",\n          \"782 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1280.73835269085,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          248.19,\n          318.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"324\",\n          \"544\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\",\n          \"Loyal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["df_combine.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t-GSqH9XdguK","executionInfo":{"status":"ok","timestamp":1747925497441,"user_tz":-420,"elapsed":60,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"ba03d5ae-b456-4857-f336-541f9c664d7d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 14 columns):\n"," #   Column              Non-Null Count  Dtype          \n","---  ------              --------------  -----          \n"," 0   Customer ID         50000 non-null  int64          \n"," 1   Real Name           50000 non-null  object         \n"," 2   Gender              50000 non-null  object         \n"," 3   Transaction Amount  50000 non-null  float64        \n"," 4   Age                 50000 non-null  int32          \n"," 5   Date                50000 non-null  datetime64[ns] \n"," 6   Merchant Name       50000 non-null  object         \n"," 7   Category            50000 non-null  object         \n"," 8   Age Group           50000 non-null  object         \n"," 9   Recency             50000 non-null  timedelta64[ns]\n"," 10  Frequency           50000 non-null  int64          \n"," 11  Monetary            50000 non-null  float64        \n"," 12  RFM Score           50000 non-null  object         \n"," 13  Customer Segment    50000 non-null  object         \n","dtypes: datetime64[ns](1), float64(2), int32(1), int64(2), object(7), timedelta64[ns](1)\n","memory usage: 5.1+ MB\n"]}]},{"cell_type":"markdown","source":["# Business Problem\n","1. In which group age that have the highest total transaction based on gender ?\n","2. Which one of customer segment that have the highest count of customer ?\n","3. From 2023, which date that have the highest count of customer ?\n","4. In which category that have the highest transaction ? How many on them based on gender  ?\n","5. Who is the customer get the highest total of monetary ?\n"],"metadata":{"id":"HYtokIVhKpbz"}},{"cell_type":"markdown","source":["Answer :\n","1. In which group age that have the highest total transaction based on gender ?"],"metadata":{"id":"CXzCl95-SCt0"}},{"cell_type":"code","source":["age = pd.pivot_table(\n","    data = df_combine ,\n","    index = ['Age Group','Gender'],\n","    values = 'Transaction Amount',\n","    aggfunc = 'sum'\n",").reset_index().sort_values(by ='Transaction Amount', ascending = False)\n","age"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"lDpLkP_Dt2V5","executionInfo":{"status":"ok","timestamp":1747866275152,"user_tz":-420,"elapsed":43,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"685b5fd3-736e-4ac4-f29c-06eadb71fe53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Age Group Gender  Transaction Amount\n","2  Group 41 - 60      F          4262612.60\n","0  Group 21 - 40      F          4200047.95\n","1  Group 21 - 40      M          3335670.24\n","3  Group 41 - 60      M          3329091.69\n","6     Group > 60      F          3179471.94\n","7     Group > 60      M          2607968.83\n","4    Group <= 20      F           668946.67\n","5    Group <= 20      M           522152.05"],"text/html":["\n","  <div id=\"df-cb7c7d36-e31a-43e6-a8ff-b1362e95f1c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age Group</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Group 41 - 60</td>\n","      <td>F</td>\n","      <td>4262612.60</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Group 21 - 40</td>\n","      <td>F</td>\n","      <td>4200047.95</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Group 21 - 40</td>\n","      <td>M</td>\n","      <td>3335670.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Group 41 - 60</td>\n","      <td>M</td>\n","      <td>3329091.69</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Group &gt; 60</td>\n","      <td>F</td>\n","      <td>3179471.94</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Group &gt; 60</td>\n","      <td>M</td>\n","      <td>2607968.83</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Group &lt;= 20</td>\n","      <td>F</td>\n","      <td>668946.67</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Group &lt;= 20</td>\n","      <td>M</td>\n","      <td>522152.05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb7c7d36-e31a-43e6-a8ff-b1362e95f1c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb7c7d36-e31a-43e6-a8ff-b1362e95f1c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb7c7d36-e31a-43e6-a8ff-b1362e95f1c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4ffb674f-6874-42de-8f8c-7d8cf2550ed0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ffb674f-6874-42de-8f8c-7d8cf2550ed0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4ffb674f-6874-42de-8f8c-7d8cf2550ed0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_89327c3f-8562-4299-b5d8-44f1b692c3c7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('age')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_89327c3f-8562-4299-b5d8-44f1b692c3c7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('age');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"age","summary":"{\n  \"name\": \"age\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 21 - 40\",\n          \"Group <= 20\",\n          \"Group 41 - 60\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1442532.3818679384,\n        \"min\": 522152.05,\n        \"max\": 4262612.6,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4200047.95,\n          2607968.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["plt.figure(figsize=(12, 8))\n","total_amount = age['Transaction Amount'].sum()\n","\n","ax = sns.barplot(data = age, x='Age Group', y='Transaction Amount', hue = 'Gender', color='cyan', palette={'F':'deepskyblue', 'M':'blue'})\n","\n","# Set the title and labels\n","plt.title('Sum Transaction Category of Age Group Based On Gender')\n","plt.xlabel('Category')\n","plt.ylabel('Transaction Amount')\n","#plt.xticks(rotation=45, horizontalalignment='right')\n","\n","# Set the background color to grey\n","#plt.gca().set_facecolor('grey')\n","\n","# Add count labels to the bars\n","\n","for p in ax.patches:\n","    height = p.get_height()\n","    percent = (height / total_amount) * 100\n","    if height > 0:\n","        ax.annotate(\n","            f'{percent:.2f}%',\n","            xy=(p.get_x() + p.get_width() / 2, height),\n","            ha='center', va='center',\n","            xytext=(0, 10),\n","            textcoords='offset points',\n","            color='black'\n","        )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"2DaGIyp4uYhY","executionInfo":{"status":"ok","timestamp":1747866278561,"user_tz":-420,"elapsed":356,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"dfb07363-ef24-44d5-a6d8-c7e3151e0540"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["2. Which one of customer segment that have the highest count of customer ?"],"metadata":{"id":"iVCDC03Mz5b3"}},{"cell_type":"code","source":["segment = pd.pivot_table(\n","    data = df_combine ,\n","    index = 'Customer Segment',\n","    values = 'Customer ID',\n","    aggfunc = 'nunique'\n",").reset_index().sort_values(by ='Customer ID', ascending = False)\n","segment"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0pFWaSeQz4VO","executionInfo":{"status":"ok","timestamp":1747866283836,"user_tz":-420,"elapsed":109,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"ca421d57-709e-4295-e597-97f6b3c52df9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Customer Segment  Customer ID\n","2             Poor        18340\n","3      Super Royal        12818\n","1           Member        10522\n","4    Uncategorized         8097\n","0            Loyal          223"],"text/html":["\n","  <div id=\"df-d7eb183a-72bf-43ce-9b1e-c0b749e994bb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer Segment</th>\n","      <th>Customer ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Poor</td>\n","      <td>18340</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Super Royal</td>\n","      <td>12818</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Member</td>\n","      <td>10522</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Uncategorized</td>\n","      <td>8097</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Loyal</td>\n","      <td>223</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7eb183a-72bf-43ce-9b1e-c0b749e994bb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7eb183a-72bf-43ce-9b1e-c0b749e994bb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7eb183a-72bf-43ce-9b1e-c0b749e994bb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-12b03f2f-4ec6-4ba7-a3ab-c851887c1dde\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12b03f2f-4ec6-4ba7-a3ab-c851887c1dde')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-12b03f2f-4ec6-4ba7-a3ab-c851887c1dde button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_348025c2-77d8-4b8e-8a26-218fdaad6720\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('segment')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_348025c2-77d8-4b8e-8a26-218fdaad6720 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('segment');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"segment","summary":"{\n  \"name\": \"segment\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Super Royal\",\n          \"Loyal\",\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6651,\n        \"min\": 223,\n        \"max\": 18340,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12818,\n          223,\n          10522\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["fig = plt.subplots(figsize=(10, 6)) # membuat grafik pie chart terhadap customer churn dan tidak\n","bagian = segment['Customer Segment']\n","#weight = [2,3,2,3,2]\n","weight = segment['Customer ID']\n","\n","plt.pie(\n","    x = weight,\n","    labels = bagian,\n","    autopct='%.2f%%',\n","    pctdistance=0.7,\n","    #weights = weight,\n","    colors = ['deepskyblue', 'blue', 'purple', 'hotpink', 'darkorange'],\n","    #autopct = lambda p: f'{p * sum(x) / 100:.2f}',\n","    #wedgeprops=dict(width=0.5, edgecolor='black'),\n","    explode=[0, 0, 0, 0, 0.5]  # Memisahkan bagian kecil (Loyal)\n",")\n","plt.title('Count Customer By ustomer Segment', fontsize = 14)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":522},"id":"o9cCo3oX2LHI","executionInfo":{"status":"ok","timestamp":1747870988508,"user_tz":-420,"elapsed":188,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5ee30710-1261-4065-9bfa-b7f4710f95ec"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["3. From 2023, which date that have the highest count of customer in 3 or 2 months last ?"],"metadata":{"id":"TMqaGw4D7oWc"}},{"cell_type":"code","source":["df_combine.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"OrjLRsomUJGd","executionInfo":{"status":"ok","timestamp":1747867584900,"user_tz":-420,"elapsed":324,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"b9726a10-6b85-4e13-90c0-4415d5160827"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID        Real Name Gender  Transaction Amount  Age       Date  \\\n","0       752858   Sean Rodriguez      F               35.47   21 2023-04-03   \n","1        26381  Michelle Phelps      F             2552.72   38 2023-07-17   \n","2       305449   Jacob Williams      M              115.97   42 2023-09-20   \n","3       988259    Nathan Snyder      M               11.31   46 2023-01-11   \n","4       764762    Crystal Knapp      F               62.21   72 2023-06-13   \n","\n","                Merchant Name     Category      Age Group  Recency  Frequency  \\\n","0               Smith-Russell     Cosmetic  Group 21 - 40 779 days          1   \n","1      Peck, Spence and Young       Travel  Group 21 - 40 674 days          1   \n","2                  Steele Inc     Clothing  Group 41 - 60 609 days          1   \n","3  Wilson, Wilson and Russell     Cosmetic  Group 41 - 60 672 days          2   \n","4               Palmer-Hinton  Electronics     Group > 60 708 days          2   \n","\n","   Monetary RFM Score Customer Segment  \n","0     35.47       211             Poor  \n","1   2552.72       415           Member  \n","2    115.97       512      Super Royal  \n","3    458.67       424           Member  \n","4    377.93       324             Poor  "],"text/html":["\n","  <div id=\"df-4d86026d-76b2-47b6-b33f-b6c353c57904\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean Rodriguez</td>\n","      <td>F</td>\n","      <td>35.47</td>\n","      <td>21</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>779 days</td>\n","      <td>1</td>\n","      <td>35.47</td>\n","      <td>211</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle Phelps</td>\n","      <td>F</td>\n","      <td>2552.72</td>\n","      <td>38</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","      <td>674 days</td>\n","      <td>1</td>\n","      <td>2552.72</td>\n","      <td>415</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>609 days</td>\n","      <td>1</td>\n","      <td>115.97</td>\n","      <td>512</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan Snyder</td>\n","      <td>M</td>\n","      <td>11.31</td>\n","      <td>46</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>672 days</td>\n","      <td>2</td>\n","      <td>458.67</td>\n","      <td>424</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal Knapp</td>\n","      <td>F</td>\n","      <td>62.21</td>\n","      <td>72</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Group &gt; 60</td>\n","      <td>708 days</td>\n","      <td>2</td>\n","      <td>377.93</td>\n","      <td>324</td>\n","      <td>Poor</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d86026d-76b2-47b6-b33f-b6c353c57904')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4d86026d-76b2-47b6-b33f-b6c353c57904 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4d86026d-76b2-47b6-b33f-b6c353c57904');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-24eca664-5755-456e-b706-a3cfd16e4a83\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24eca664-5755-456e-b706-a3cfd16e4a83')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-24eca664-5755-456e-b706-a3cfd16e4a83 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_combine","summary":"{\n  \"name\": \"df_combine\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\",\n          \"Renee Anderson\",\n          \"Sara Perkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\",\n          \"Group <= 20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"714 days 00:00:00\",\n          \"781 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1280.73835269085,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          248.19,\n          318.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"324\",\n          \"544\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\",\n          \"Loyal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["df_combine.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hdOOAJbIl7k6","executionInfo":{"status":"ok","timestamp":1747867586419,"user_tz":-420,"elapsed":27,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"71225c3b-8d41-433e-8f44-3574c61890e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 50000 entries, 0 to 49999\n","Data columns (total 14 columns):\n"," #   Column              Non-Null Count  Dtype          \n","---  ------              --------------  -----          \n"," 0   Customer ID         50000 non-null  int64          \n"," 1   Real Name           50000 non-null  object         \n"," 2   Gender              50000 non-null  object         \n"," 3   Transaction Amount  50000 non-null  float64        \n"," 4   Age                 50000 non-null  int32          \n"," 5   Date                50000 non-null  datetime64[ns] \n"," 6   Merchant Name       50000 non-null  object         \n"," 7   Category            50000 non-null  object         \n"," 8   Age Group           50000 non-null  object         \n"," 9   Recency             50000 non-null  timedelta64[ns]\n"," 10  Frequency           50000 non-null  int64          \n"," 11  Monetary            50000 non-null  float64        \n"," 12  RFM Score           50000 non-null  object         \n"," 13  Customer Segment    50000 non-null  object         \n","dtypes: datetime64[ns](1), float64(2), int32(1), int64(2), object(7), timedelta64[ns](1)\n","memory usage: 5.1+ MB\n"]}]},{"cell_type":"code","source":["df_combine['Month Name'] = pd.DatetimeIndex(df_combine['Date']).month_name()\n","df_combine['Day Month Baru'] = df_combine['Date'].dt.strftime('%B %d')\n","df_combine.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"jBUXo9FaUegp","executionInfo":{"status":"ok","timestamp":1747867588871,"user_tz":-420,"elapsed":528,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"5380a781-9fe4-4d1c-8849-ab37f986c5f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID        Real Name Gender  Transaction Amount  Age       Date  \\\n","0       752858   Sean Rodriguez      F               35.47   21 2023-04-03   \n","1        26381  Michelle Phelps      F             2552.72   38 2023-07-17   \n","2       305449   Jacob Williams      M              115.97   42 2023-09-20   \n","3       988259    Nathan Snyder      M               11.31   46 2023-01-11   \n","4       764762    Crystal Knapp      F               62.21   72 2023-06-13   \n","\n","                Merchant Name     Category      Age Group  Recency  Frequency  \\\n","0               Smith-Russell     Cosmetic  Group 21 - 40 779 days          1   \n","1      Peck, Spence and Young       Travel  Group 21 - 40 674 days          1   \n","2                  Steele Inc     Clothing  Group 41 - 60 609 days          1   \n","3  Wilson, Wilson and Russell     Cosmetic  Group 41 - 60 672 days          2   \n","4               Palmer-Hinton  Electronics     Group > 60 708 days          2   \n","\n","   Monetary RFM Score Customer Segment Month Name Day Month Baru  \n","0     35.47       211             Poor      April       April 03  \n","1   2552.72       415           Member       July        July 17  \n","2    115.97       512      Super Royal  September   September 20  \n","3    458.67       424           Member    January     January 11  \n","4    377.93       324             Poor       June        June 13  "],"text/html":["\n","  <div id=\"df-eaa50efe-1b6b-420c-954e-c14418725424\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","      <th>Month Name</th>\n","      <th>Day Month Baru</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean Rodriguez</td>\n","      <td>F</td>\n","      <td>35.47</td>\n","      <td>21</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>779 days</td>\n","      <td>1</td>\n","      <td>35.47</td>\n","      <td>211</td>\n","      <td>Poor</td>\n","      <td>April</td>\n","      <td>April 03</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle Phelps</td>\n","      <td>F</td>\n","      <td>2552.72</td>\n","      <td>38</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","      <td>674 days</td>\n","      <td>1</td>\n","      <td>2552.72</td>\n","      <td>415</td>\n","      <td>Member</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>609 days</td>\n","      <td>1</td>\n","      <td>115.97</td>\n","      <td>512</td>\n","      <td>Super Royal</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan Snyder</td>\n","      <td>M</td>\n","      <td>11.31</td>\n","      <td>46</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>672 days</td>\n","      <td>2</td>\n","      <td>458.67</td>\n","      <td>424</td>\n","      <td>Member</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal Knapp</td>\n","      <td>F</td>\n","      <td>62.21</td>\n","      <td>72</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Group &gt; 60</td>\n","      <td>708 days</td>\n","      <td>2</td>\n","      <td>377.93</td>\n","      <td>324</td>\n","      <td>Poor</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eaa50efe-1b6b-420c-954e-c14418725424')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eaa50efe-1b6b-420c-954e-c14418725424 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eaa50efe-1b6b-420c-954e-c14418725424');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-74f2c79c-622d-40d5-9622-6b5b6e268538\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74f2c79c-622d-40d5-9622-6b5b6e268538')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-74f2c79c-622d-40d5-9622-6b5b6e268538 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_combine","summary":"{\n  \"name\": \"df_combine\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\",\n          \"Renee Anderson\",\n          \"Sara Perkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\",\n          \"Group <= 20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"714 days 00:00:00\",\n          \"781 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1280.73835269085,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          248.19,\n          318.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"324\",\n          \"544\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\",\n          \"Loyal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\",\n          \"July\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month Baru\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 07\",\n          \"August 11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["filter = df_combine[df_combine['Month Name'].isin(['October', 'September', 'August'])]\n","filter.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"RtZxSnvUUkLP","executionInfo":{"status":"ok","timestamp":1747867594575,"user_tz":-420,"elapsed":227,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"bcf02904-f173-4217-eca4-8f24896d8da5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Customer ID        Real Name Gender  Transaction Amount  Age       Date  \\\n","2        305449   Jacob Williams      M              115.97   42 2023-09-20   \n","5        576539  Monica Bartlett      F               99.14   22 2023-08-24   \n","6        124681      Thomas Shaw      F              145.94   47 2023-08-30   \n","11       123235    Hunter Peters      M              387.78   52 2023-09-24   \n","12       840546    Julie Russell      M              142.07   55 2023-08-07   \n","\n","                Merchant Name  Category      Age Group  Recency  Frequency  \\\n","2                  Steele Inc  Clothing  Group 41 - 60 609 days          1   \n","5      Tran, Torres and Joyce  Cosmetic  Group 21 - 40 636 days          1   \n","6   Evans, Griffin and Torres  Cosmetic  Group 41 - 60 630 days          2   \n","11      Barker, Ortiz and Cox    Market  Group 41 - 60 605 days          1   \n","12              Taylor-Morrow  Cosmetic  Group 41 - 60 653 days          1   \n","\n","    Monetary RFM Score Customer Segment Month Name Day Month Baru  \n","2     115.97       512      Super Royal  September   September 20  \n","5      99.14       412           Member     August      August 24  \n","6     896.98       525      Super Royal     August      August 30  \n","11    387.78       514      Super Royal  September   September 24  \n","12    142.07       412           Member     August      August 07  "],"text/html":["\n","  <div id=\"df-79a13cc3-c147-4d88-9022-e5374d741fe1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","      <th>Month Name</th>\n","      <th>Day Month Baru</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>609 days</td>\n","      <td>1</td>\n","      <td>115.97</td>\n","      <td>512</td>\n","      <td>Super Royal</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>576539</td>\n","      <td>Monica Bartlett</td>\n","      <td>F</td>\n","      <td>99.14</td>\n","      <td>22</td>\n","      <td>2023-08-24</td>\n","      <td>Tran, Torres and Joyce</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>636 days</td>\n","      <td>1</td>\n","      <td>99.14</td>\n","      <td>412</td>\n","      <td>Member</td>\n","      <td>August</td>\n","      <td>August 24</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>124681</td>\n","      <td>Thomas Shaw</td>\n","      <td>F</td>\n","      <td>145.94</td>\n","      <td>47</td>\n","      <td>2023-08-30</td>\n","      <td>Evans, Griffin and Torres</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>630 days</td>\n","      <td>2</td>\n","      <td>896.98</td>\n","      <td>525</td>\n","      <td>Super Royal</td>\n","      <td>August</td>\n","      <td>August 30</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>123235</td>\n","      <td>Hunter Peters</td>\n","      <td>M</td>\n","      <td>387.78</td>\n","      <td>52</td>\n","      <td>2023-09-24</td>\n","      <td>Barker, Ortiz and Cox</td>\n","      <td>Market</td>\n","      <td>Group 41 - 60</td>\n","      <td>605 days</td>\n","      <td>1</td>\n","      <td>387.78</td>\n","      <td>514</td>\n","      <td>Super Royal</td>\n","      <td>September</td>\n","      <td>September 24</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>840546</td>\n","      <td>Julie Russell</td>\n","      <td>M</td>\n","      <td>142.07</td>\n","      <td>55</td>\n","      <td>2023-08-07</td>\n","      <td>Taylor-Morrow</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>653 days</td>\n","      <td>1</td>\n","      <td>142.07</td>\n","      <td>412</td>\n","      <td>Member</td>\n","      <td>August</td>\n","      <td>August 07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79a13cc3-c147-4d88-9022-e5374d741fe1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-79a13cc3-c147-4d88-9022-e5374d741fe1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-79a13cc3-c147-4d88-9022-e5374d741fe1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-09ef9499-a4ae-438a-83a1-7862e0d9725b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09ef9499-a4ae-438a-83a1-7862e0d9725b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-09ef9499-a4ae-438a-83a1-7862e0d9725b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filter","summary":"{\n  \"name\": \"filter\",\n  \"rows\": 12946,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 287174,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 12946,\n        \"samples\": [\n          149947,\n          557233,\n          118825\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11874,\n        \"samples\": [\n          \"Tiffany Black\",\n          \"Ryan Vasquez\",\n          \"Whitney Jenkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 630.4745076841141,\n        \"min\": 5.36,\n        \"max\": 2999.88,\n        \"num_unique_values\": 11565,\n        \"samples\": [\n          613.67,\n          21.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          42,\n          57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-08-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"2023-08-07 00:00:00\",\n          \"2023-09-29 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10959,\n        \"samples\": [\n          \"Meyers Inc\",\n          \"Holmes Ltd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Clothing\",\n          \"Cosmetic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 21 - 40\",\n          \"Group > 60\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"653 days 00:00:00\",\n          \"652 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          1,\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1259.372323700707,\n        \"min\": 6.76,\n        \"max\": 19133.33,\n        \"num_unique_values\": 11087,\n        \"samples\": [\n          457.94,\n          270.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"554\",\n          \"415\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Super Royal\",\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"September\",\n          \"August\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month Baru\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 75,\n        \"samples\": [\n          \"August 07\",\n          \"September 29\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["# Tambahkan kolom datetime baru dengan tahun dummy (misalnya 2023)\n","#filter['Day Month Date'] = pd.to_datetime(filter['Day Month Baru'] + ' 2023', format='%B %d %Y')\n","\n","# Pivot table\n","date = pd.pivot_table(\n","    data = filter,\n","    index = 'Day Month Baru',\n","    values = 'Customer ID',\n","    aggfunc = 'nunique'\n",").reset_index()\n","\n","# Gabungkan dengan kolom datetime untuk keperluan sorting\n","date['Day Month Date'] = pd.to_datetime(date['Day Month Baru'] + ' 2023', format='%B %d %Y')\n","\n","# Sort berdasarkan tanggal, bukan string\n","date = date.sort_values(by='Day Month Date').reset_index(drop=True).tail(20)\n","\n","# (Opsional) Drop kolom bantu\n","#date = date.drop(columns=['Day Month Date'])\n","\n","# Tampilkan hasil\n","date"],"metadata":{"id":"tz4mGkwa663U","colab":{"base_uri":"https://localhost:8080/","height":677},"executionInfo":{"status":"ok","timestamp":1747867596283,"user_tz":-420,"elapsed":171,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"4ec9ba9f-3bf0-4395-c658-1a1dd8879943"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Day Month Baru  Customer ID Day Month Date\n","55   September 25          158     2023-09-25\n","56   September 26          157     2023-09-26\n","57   September 27          181     2023-09-27\n","58   September 28          162     2023-09-28\n","59   September 29          163     2023-09-29\n","60   September 30          169     2023-09-30\n","61     October 01          179     2023-10-01\n","62     October 02          154     2023-10-02\n","63     October 03          167     2023-10-03\n","64     October 04          192     2023-10-04\n","65     October 05          187     2023-10-05\n","66     October 06          170     2023-10-06\n","67     October 07          182     2023-10-07\n","68     October 08          189     2023-10-08\n","69     October 09          164     2023-10-09\n","70     October 10          160     2023-10-10\n","71     October 11          171     2023-10-11\n","72     October 12          156     2023-10-12\n","73     October 13          136     2023-10-13\n","74     October 14          187     2023-10-14"],"text/html":["\n","  <div id=\"df-68c4ef38-9b0f-4371-8adf-20f4fc9627e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Day Month Baru</th>\n","      <th>Customer ID</th>\n","      <th>Day Month Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>55</th>\n","      <td>September 25</td>\n","      <td>158</td>\n","      <td>2023-09-25</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>September 26</td>\n","      <td>157</td>\n","      <td>2023-09-26</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>September 27</td>\n","      <td>181</td>\n","      <td>2023-09-27</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>September 28</td>\n","      <td>162</td>\n","      <td>2023-09-28</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>September 29</td>\n","      <td>163</td>\n","      <td>2023-09-29</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>September 30</td>\n","      <td>169</td>\n","      <td>2023-09-30</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>October 01</td>\n","      <td>179</td>\n","      <td>2023-10-01</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>October 02</td>\n","      <td>154</td>\n","      <td>2023-10-02</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>October 03</td>\n","      <td>167</td>\n","      <td>2023-10-03</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>October 04</td>\n","      <td>192</td>\n","      <td>2023-10-04</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>October 05</td>\n","      <td>187</td>\n","      <td>2023-10-05</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>October 06</td>\n","      <td>170</td>\n","      <td>2023-10-06</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>October 07</td>\n","      <td>182</td>\n","      <td>2023-10-07</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>October 08</td>\n","      <td>189</td>\n","      <td>2023-10-08</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>October 09</td>\n","      <td>164</td>\n","      <td>2023-10-09</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>October 10</td>\n","      <td>160</td>\n","      <td>2023-10-10</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>October 11</td>\n","      <td>171</td>\n","      <td>2023-10-11</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>October 12</td>\n","      <td>156</td>\n","      <td>2023-10-12</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>October 13</td>\n","      <td>136</td>\n","      <td>2023-10-13</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>October 14</td>\n","      <td>187</td>\n","      <td>2023-10-14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68c4ef38-9b0f-4371-8adf-20f4fc9627e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-68c4ef38-9b0f-4371-8adf-20f4fc9627e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-68c4ef38-9b0f-4371-8adf-20f4fc9627e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ed98249b-7dab-47a3-a007-7e906bd38060\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ed98249b-7dab-47a3-a007-7e906bd38060')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ed98249b-7dab-47a3-a007-7e906bd38060 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_8d36a797-5c98-41ec-b247-89f9ca233c6c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('date')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8d36a797-5c98-41ec-b247-89f9ca233c6c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('date');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"date","summary":"{\n  \"name\": \"date\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"Day Month Baru\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"September 25\",\n          \"October 12\",\n          \"October 10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 136,\n        \"max\": 192,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          158,\n          169,\n          170\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-09-25 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"2023-09-25 00:00:00\",\n          \"2023-10-12 00:00:00\",\n          \"2023-10-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["# Create the bar chart with sorted values\n","# plt.style.use('dark_background')\n","\n","plt.figure(figsize=(15,8))\n","count_customer = date['Customer ID'].sum()\n","\n","ax = sns.barplot(data= date, x='Day Month Baru', y='Customer ID', color='deepskyblue')\n","\n","# Set the title and labels\n","plt.title('Count Customer By Date')\n","plt.xlabel('Date')\n","plt.ylabel('Customer ID')\n","plt.xticks(rotation=45, horizontalalignment='right')\n","\n","# Set the background color to grey\n","#plt.gca().set_facecolor('grey')\n","\n","# Add count labels to the bars\n","\n","for p in ax.patches:\n","    height = p.get_height()\n","    percent = (height / count_customer) * 100\n","    if height > 0:\n","        ax.annotate(\n","            f'{percent:.2f}%',\n","            xy=(p.get_x() + p.get_width() / 2, height),\n","            ha='center', va='center',\n","            xytext=(0, 10),\n","            textcoords='offset points',\n","            color='black'\n","        )\n","                #font = 'monospace')"],"metadata":{"id":"RaNHQe6HiCyJ","colab":{"base_uri":"https://localhost:8080/","height":784},"executionInfo":{"status":"ok","timestamp":1747867626007,"user_tz":-420,"elapsed":498,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"c30aef2c-fcad-4f20-831c-58a7453643ff"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["4. In which category that have the highest transaction ? How many on them based on gender  ?"],"metadata":{"id":"8aj6FvPNsCrK"}},{"cell_type":"code","source":["category = pd.pivot_table(\n","    data = df_combine ,\n","    index = ['Category','Gender'],\n","    values = 'Customer ID',\n","    aggfunc = 'nunique'\n",").reset_index().sort_values(by ='Customer ID', ascending = False)\n","category"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"h4qt2TgGsDUR","executionInfo":{"status":"ok","timestamp":1747867629029,"user_tz":-420,"elapsed":290,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"8b4d96d7-7212-4df5-bafe-44eca27875a3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Category Gender  Customer ID\n","8    Restaurant      F         4719\n","10       Travel      F         4675\n","6        Market      F         4632\n","2      Cosmetic      F         4627\n","4   Electronics      F         4584\n","0      Clothing      F         4523\n","7        Market      M         3750\n","5   Electronics      M         3740\n","1      Clothing      M         3738\n","11       Travel      M         3702\n","9    Restaurant      M         3694\n","3      Cosmetic      M         3616"],"text/html":["\n","  <div id=\"df-1c9c8b38-0c51-49be-b137-cbb9a180d864\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Gender</th>\n","      <th>Customer ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Restaurant</td>\n","      <td>F</td>\n","      <td>4719</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Travel</td>\n","      <td>F</td>\n","      <td>4675</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Market</td>\n","      <td>F</td>\n","      <td>4632</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cosmetic</td>\n","      <td>F</td>\n","      <td>4627</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Electronics</td>\n","      <td>F</td>\n","      <td>4584</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Clothing</td>\n","      <td>F</td>\n","      <td>4523</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Market</td>\n","      <td>M</td>\n","      <td>3750</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Electronics</td>\n","      <td>M</td>\n","      <td>3740</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Clothing</td>\n","      <td>M</td>\n","      <td>3738</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Travel</td>\n","      <td>M</td>\n","      <td>3702</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Restaurant</td>\n","      <td>M</td>\n","      <td>3694</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Cosmetic</td>\n","      <td>M</td>\n","      <td>3616</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c9c8b38-0c51-49be-b137-cbb9a180d864')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c9c8b38-0c51-49be-b137-cbb9a180d864 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c9c8b38-0c51-49be-b137-cbb9a180d864');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-dfcad31b-c665-4ae8-bb3d-923dbf569e9a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfcad31b-c665-4ae8-bb3d-923dbf569e9a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-dfcad31b-c665-4ae8-bb3d-923dbf569e9a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_f0154972-443e-4834-8bdc-cf38b27cdbfb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('category')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f0154972-443e-4834-8bdc-cf38b27cdbfb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('category');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"category","summary":"{\n  \"name\": \"category\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Restaurant\",\n          \"Travel\",\n          \"Clothing\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 483,\n        \"min\": 3616,\n        \"max\": 4719,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          3694,\n          3702\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["# Create the bar chart with sorted values\n","# plt.style.use('dark_background')\n","\n","plt.figure(figsize=(12, 8))\n","count_customer_1 = category['Customer ID'].sum()\n","\n","ax = sns.barplot(data= category, x='Category', y='Customer ID', hue = 'Gender',  palette={'F':'deepskyblue', 'M':'blue'})\n","\n","# Set the title and labels\n","plt.title('Sum Customer of Category By Gender')\n","plt.xlabel('Category')\n","plt.ylabel('Transaction Amount')\n","#plt.xticks(rotation=45, horizontalalignment='right')\n","\n","# Set the background color to grey\n","#plt.gca().set_facecolor('grey')\n","\n","# Add count labels to the bars\n","\n","for p in ax.patches:\n","    height = p.get_height()\n","    percent = (height / count_customer_1) * 100\n","    if height > 0:\n","        ax.annotate(\n","            f'{percent:.2f}%',\n","            xy=(p.get_x() + p.get_width() / 2, height),\n","            ha='center', va='center',\n","            xytext=(0, 10),\n","            textcoords='offset points',\n","            color='black'\n","        )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"O5pjesoktvAt","executionInfo":{"status":"ok","timestamp":1747867631192,"user_tz":-420,"elapsed":493,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"4d05ef6a-6475-406f-deb8-ad4482d5f7f1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["Transaction = pd.pivot_table(\n","    data = df_combine ,\n","    index = 'Category',\n","    values = 'Transaction Amount',\n","    aggfunc = 'sum'\n",").reset_index().sort_values(by ='Transaction Amount', ascending = False)\n","Transaction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"DEjwfVIg5iK2","executionInfo":{"status":"ok","timestamp":1747867633616,"user_tz":-420,"elapsed":99,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"137700de-1a9f-4447-a5c4-d819dcfcd955"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Category  Transaction Amount\n","5       Travel         12900231.94\n","2  Electronics          4394092.10\n","3       Market          2151134.42\n","0     Clothing          1319342.47\n","1     Cosmetic           876672.44\n","4   Restaurant           464488.60"],"text/html":["\n","  <div id=\"df-b091afe6-ae20-4185-9a47-32c65fd0d256\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Transaction Amount</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>Travel</td>\n","      <td>12900231.94</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Electronics</td>\n","      <td>4394092.10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Market</td>\n","      <td>2151134.42</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Clothing</td>\n","      <td>1319342.47</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Cosmetic</td>\n","      <td>876672.44</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Restaurant</td>\n","      <td>464488.60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b091afe6-ae20-4185-9a47-32c65fd0d256')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b091afe6-ae20-4185-9a47-32c65fd0d256 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b091afe6-ae20-4185-9a47-32c65fd0d256');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ee76472a-e28d-4d54-8f99-846b41f78879\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee76472a-e28d-4d54-8f99-846b41f78879')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ee76472a-e28d-4d54-8f99-846b41f78879 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_84e1f3ca-1f03-4da5-b34c-2bff2a273810\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Transaction')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_84e1f3ca-1f03-4da5-b34c-2bff2a273810 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Transaction');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Transaction","summary":"{\n  \"name\": \"Transaction\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Travel\",\n          \"Electronics\",\n          \"Restaurant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4725056.298610719,\n        \"min\": 464488.6,\n        \"max\": 12900231.94,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          12900231.94,\n          4394092.1,\n          464488.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["Transaction['Percentage'] = (Transaction['Transaction Amount'] / Transaction['Transaction Amount'].sum()) * 100\n","Transaction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"Lz2EQqi5-G4n","executionInfo":{"status":"ok","timestamp":1747867635208,"user_tz":-420,"elapsed":24,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"74f7d7d4-4cbc-4b91-b935-fb1564e67e38"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Category  Transaction Amount  Percentage\n","5       Travel         12900231.94   58.356347\n","2  Electronics          4394092.10   19.877407\n","3       Market          2151134.42    9.731015\n","0     Clothing          1319342.47    5.968265\n","1     Cosmetic           876672.44    3.965774\n","4   Restaurant           464488.60    2.101192"],"text/html":["\n","  <div id=\"df-3860cb5c-75c9-495a-82ae-6306b6c0b424\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Transaction Amount</th>\n","      <th>Percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>Travel</td>\n","      <td>12900231.94</td>\n","      <td>58.356347</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Electronics</td>\n","      <td>4394092.10</td>\n","      <td>19.877407</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Market</td>\n","      <td>2151134.42</td>\n","      <td>9.731015</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Clothing</td>\n","      <td>1319342.47</td>\n","      <td>5.968265</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Cosmetic</td>\n","      <td>876672.44</td>\n","      <td>3.965774</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Restaurant</td>\n","      <td>464488.60</td>\n","      <td>2.101192</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3860cb5c-75c9-495a-82ae-6306b6c0b424')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3860cb5c-75c9-495a-82ae-6306b6c0b424 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3860cb5c-75c9-495a-82ae-6306b6c0b424');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-67a3ba55-8b14-4923-b3dc-4a5515269d42\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67a3ba55-8b14-4923-b3dc-4a5515269d42')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-67a3ba55-8b14-4923-b3dc-4a5515269d42 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_909b26ca-0ef6-47c5-adcc-05f8d02c0d7c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('Transaction')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_909b26ca-0ef6-47c5-adcc-05f8d02c0d7c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('Transaction');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"Transaction","summary":"{\n  \"name\": \"Transaction\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Travel\",\n          \"Electronics\",\n          \"Restaurant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4725056.298610719,\n        \"min\": 464488.6,\n        \"max\": 12900231.94,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          12900231.94,\n          4394092.1,\n          464488.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.37457897115309,\n        \"min\": 2.101191527563276,\n        \"max\": 58.35634729448509,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          58.35634729448509,\n          19.877407307418792,\n          2.101191527563276\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["# Visualisasi lineplot\n","plt.figure(figsize=(12,8))\n","sns.lineplot(data= Transaction, x=\"Category\", y=\"Percentage\", marker=\"o\", color='deepskyblue', linewidth=2)\n","\n","# Menambahkan angka di setiap titik (Opsional)\n","for x, y in zip(Transaction['Category'], Transaction['Percentage']):\n","    plt.annotate(f\"{y:.2f}%\", xy=(x, y), textcoords=\"offset points\", xytext=(15, 10), ha='center', color='black', fontsize=10)\n","\n","\n","# Menambahkan judul dan label\n","plt.title(\"Sum Transaction by Category \", fontsize=16)\n","plt.xlabel(\"Category\", fontsize=12)\n","plt.ylabel(\"Transaction Amount\", fontsize=12)\n","#plt.xticks(rotation=45)\n","\n","plt.tight_layout()  # Menghindari elemen terpotong\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":807},"id":"bQ8CiVC74R_o","executionInfo":{"status":"ok","timestamp":1747870959659,"user_tz":-420,"elapsed":641,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"673f8264-ee23-486e-b59e-d895a65702b1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["5. Who is the customer get the highest total of monetary ?"],"metadata":{"id":"oQIRRMnWDKZa"}},{"cell_type":"code","source":["df_combine.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"I78eY1YpDXbi","executionInfo":{"status":"ok","timestamp":1747867690562,"user_tz":-420,"elapsed":226,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"05ae8d89-a8ff-4f6f-a7be-5ad2fa721b4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Customer ID        Real Name Gender  Transaction Amount  Age       Date  \\\n","0       752858   Sean Rodriguez      F               35.47   21 2023-04-03   \n","1        26381  Michelle Phelps      F             2552.72   38 2023-07-17   \n","2       305449   Jacob Williams      M              115.97   42 2023-09-20   \n","3       988259    Nathan Snyder      M               11.31   46 2023-01-11   \n","4       764762    Crystal Knapp      F               62.21   72 2023-06-13   \n","\n","                Merchant Name     Category      Age Group  Recency  Frequency  \\\n","0               Smith-Russell     Cosmetic  Group 21 - 40 779 days          1   \n","1      Peck, Spence and Young       Travel  Group 21 - 40 674 days          1   \n","2                  Steele Inc     Clothing  Group 41 - 60 609 days          1   \n","3  Wilson, Wilson and Russell     Cosmetic  Group 41 - 60 672 days          2   \n","4               Palmer-Hinton  Electronics     Group > 60 708 days          2   \n","\n","   Monetary RFM Score Customer Segment Month Name Day Month Baru  \n","0     35.47       211             Poor      April       April 03  \n","1   2552.72       415           Member       July        July 17  \n","2    115.97       512      Super Royal  September   September 20  \n","3    458.67       424           Member    January     January 11  \n","4    377.93       324             Poor       June        June 13  "],"text/html":["\n","  <div id=\"df-6aed8364-6b2b-4de8-828a-a92c9f64690a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Customer ID</th>\n","      <th>Real Name</th>\n","      <th>Gender</th>\n","      <th>Transaction Amount</th>\n","      <th>Age</th>\n","      <th>Date</th>\n","      <th>Merchant Name</th>\n","      <th>Category</th>\n","      <th>Age Group</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","      <th>Month Name</th>\n","      <th>Day Month Baru</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>752858</td>\n","      <td>Sean Rodriguez</td>\n","      <td>F</td>\n","      <td>35.47</td>\n","      <td>21</td>\n","      <td>2023-04-03</td>\n","      <td>Smith-Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 21 - 40</td>\n","      <td>779 days</td>\n","      <td>1</td>\n","      <td>35.47</td>\n","      <td>211</td>\n","      <td>Poor</td>\n","      <td>April</td>\n","      <td>April 03</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26381</td>\n","      <td>Michelle Phelps</td>\n","      <td>F</td>\n","      <td>2552.72</td>\n","      <td>38</td>\n","      <td>2023-07-17</td>\n","      <td>Peck, Spence and Young</td>\n","      <td>Travel</td>\n","      <td>Group 21 - 40</td>\n","      <td>674 days</td>\n","      <td>1</td>\n","      <td>2552.72</td>\n","      <td>415</td>\n","      <td>Member</td>\n","      <td>July</td>\n","      <td>July 17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>305449</td>\n","      <td>Jacob Williams</td>\n","      <td>M</td>\n","      <td>115.97</td>\n","      <td>42</td>\n","      <td>2023-09-20</td>\n","      <td>Steele Inc</td>\n","      <td>Clothing</td>\n","      <td>Group 41 - 60</td>\n","      <td>609 days</td>\n","      <td>1</td>\n","      <td>115.97</td>\n","      <td>512</td>\n","      <td>Super Royal</td>\n","      <td>September</td>\n","      <td>September 20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>988259</td>\n","      <td>Nathan Snyder</td>\n","      <td>M</td>\n","      <td>11.31</td>\n","      <td>46</td>\n","      <td>2023-01-11</td>\n","      <td>Wilson, Wilson and Russell</td>\n","      <td>Cosmetic</td>\n","      <td>Group 41 - 60</td>\n","      <td>672 days</td>\n","      <td>2</td>\n","      <td>458.67</td>\n","      <td>424</td>\n","      <td>Member</td>\n","      <td>January</td>\n","      <td>January 11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>764762</td>\n","      <td>Crystal Knapp</td>\n","      <td>F</td>\n","      <td>62.21</td>\n","      <td>72</td>\n","      <td>2023-06-13</td>\n","      <td>Palmer-Hinton</td>\n","      <td>Electronics</td>\n","      <td>Group &gt; 60</td>\n","      <td>708 days</td>\n","      <td>2</td>\n","      <td>377.93</td>\n","      <td>324</td>\n","      <td>Poor</td>\n","      <td>June</td>\n","      <td>June 13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6aed8364-6b2b-4de8-828a-a92c9f64690a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6aed8364-6b2b-4de8-828a-a92c9f64690a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6aed8364-6b2b-4de8-828a-a92c9f64690a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-288862d7-4f93-42e9-bbe7-5cfe845bd834\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-288862d7-4f93-42e9-bbe7-5cfe845bd834')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-288862d7-4f93-42e9-bbe7-5cfe845bd834 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_combine","summary":"{\n  \"name\": \"df_combine\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Customer ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288232,\n        \"min\": 29,\n        \"max\": 999997,\n        \"num_unique_values\": 50000,\n        \"samples\": [\n          612016,\n          852349,\n          59423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Jennifer Bates\",\n          \"Renee Anderson\",\n          \"Sara Perkins\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 631.6697236039846,\n        \"min\": 5.01,\n        \"max\": 2999.88,\n        \"num_unique_values\": 34665,\n        \"samples\": [\n          434.28,\n          71.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          21,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-06-07 00:00:00\",\n          \"2023-08-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Merchant Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36939,\n        \"samples\": [\n          \"Soto, Stewart and Jackson\",\n          \"Davenport, Moreno and Joseph\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Cosmetic\",\n          \"Travel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Group 41 - 60\",\n          \"Group <= 20\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"714 days 00:00:00\",\n          \"781 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1280.73835269085,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          248.19,\n          318.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"324\",\n          \"544\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\",\n          \"Loyal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"March\",\n          \"July\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Day Month Baru\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"June 07\",\n          \"August 11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["customer_segment_1 = df_combine.groupby(['Real Name', 'Customer Segment', 'RFM Score']).agg(Recency_Score = ('Recency','sum') , Frequency_Score = ('Frequency', 'sum') , Monetary_Score = ('Monetary', 'sum')).reset_index().sort_values(by = 'Monetary_Score', ascending = False)\n","customer_segment_1.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"PZJg7YcSj_9y","executionInfo":{"status":"ok","timestamp":1747927717421,"user_tz":-420,"elapsed":368,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"50ff5d5d-a95d-4aac-af7c-6132b469afdb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Real Name Customer Segment RFM Score Recency_Score  \\\n","10298       David Smith      Super Royal       555    12936 days   \n","31983      Robert Smith      Super Royal       555    13984 days   \n","27693     Michael Smith      Super Royal       555    16464 days   \n","27480   Michael Johnson      Super Royal       555    11740 days   \n","27758  Michael Williams      Super Royal       555    12894 days   \n","26491     Matthew Smith            Loyal       455     9540 days   \n","27525  Michael Martinez      Super Royal       555     8955 days   \n","18942        John Smith      Super Royal       555     9536 days   \n","18632        John Brown      Super Royal       555     8835 days   \n","15691     James Johnson      Super Royal       555    10353 days   \n","\n","       Frequency_Score  Monetary_Score  \n","10298              484       420933.26  \n","31983              529       284961.26  \n","27693              784       244210.12  \n","27480              400       239880.80  \n","27758              441       239575.14  \n","26491              225       134677.65  \n","27525              225       132547.95  \n","18942              256       132174.56  \n","18632              225       128478.15  \n","15691              289       115213.42  "],"text/html":["\n","  <div id=\"df-774e6a42-820e-48f7-a0f5-967fc67da8ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Customer Segment</th>\n","      <th>RFM Score</th>\n","      <th>Recency_Score</th>\n","      <th>Frequency_Score</th>\n","      <th>Monetary_Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10298</th>\n","      <td>David Smith</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>12936 days</td>\n","      <td>484</td>\n","      <td>420933.26</td>\n","    </tr>\n","    <tr>\n","      <th>31983</th>\n","      <td>Robert Smith</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>13984 days</td>\n","      <td>529</td>\n","      <td>284961.26</td>\n","    </tr>\n","    <tr>\n","      <th>27693</th>\n","      <td>Michael Smith</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>16464 days</td>\n","      <td>784</td>\n","      <td>244210.12</td>\n","    </tr>\n","    <tr>\n","      <th>27480</th>\n","      <td>Michael Johnson</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>11740 days</td>\n","      <td>400</td>\n","      <td>239880.80</td>\n","    </tr>\n","    <tr>\n","      <th>27758</th>\n","      <td>Michael Williams</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>12894 days</td>\n","      <td>441</td>\n","      <td>239575.14</td>\n","    </tr>\n","    <tr>\n","      <th>26491</th>\n","      <td>Matthew Smith</td>\n","      <td>Loyal</td>\n","      <td>455</td>\n","      <td>9540 days</td>\n","      <td>225</td>\n","      <td>134677.65</td>\n","    </tr>\n","    <tr>\n","      <th>27525</th>\n","      <td>Michael Martinez</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>8955 days</td>\n","      <td>225</td>\n","      <td>132547.95</td>\n","    </tr>\n","    <tr>\n","      <th>18942</th>\n","      <td>John Smith</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>9536 days</td>\n","      <td>256</td>\n","      <td>132174.56</td>\n","    </tr>\n","    <tr>\n","      <th>18632</th>\n","      <td>John Brown</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>8835 days</td>\n","      <td>225</td>\n","      <td>128478.15</td>\n","    </tr>\n","    <tr>\n","      <th>15691</th>\n","      <td>James Johnson</td>\n","      <td>Super Royal</td>\n","      <td>555</td>\n","      <td>10353 days</td>\n","      <td>289</td>\n","      <td>115213.42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-774e6a42-820e-48f7-a0f5-967fc67da8ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-774e6a42-820e-48f7-a0f5-967fc67da8ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-774e6a42-820e-48f7-a0f5-967fc67da8ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1a4e4f91-0792-4f0f-b4df-a7ee80effb28\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a4e4f91-0792-4f0f-b4df-a7ee80effb28')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1a4e4f91-0792-4f0f-b4df-a7ee80effb28 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"customer_segment_1","summary":"{\n  \"name\": \"customer_segment_1\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Amber Lang\",\n          \"Timothy Young\",\n          \"William Mitchell\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Loyal\",\n          \"Uncategorized\",\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"355\",\n          \"421\",\n          \"444\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency_Score\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 1199,\n        \"samples\": [\n          \"1726 days 00:00:00\",\n          \"672 days 00:00:00\",\n          \"4808 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1,\n        \"max\": 784,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          484,\n          64,\n          121\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4825.359557745285,\n        \"min\": 5.01,\n        \"max\": 420933.26,\n        \"num_unique_values\": 31440,\n        \"samples\": [\n          5373.4,\n          2992.8199999999997,\n          54.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["df_rfm.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rRJ5dN_rCa3u","executionInfo":{"status":"ok","timestamp":1747867781337,"user_tz":-420,"elapsed":200,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"32bd77b3-1194-4a4f-8e6e-a0112606a866"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Real Name Last_Transaction  Frequency  Monetary Today Date  Recency  \\\n","0      Aaron Adams       2023-10-05          2   1173.85 2025-05-21 594 days   \n","1      Aaron Allen       2023-08-10          2    159.52 2025-05-21 650 days   \n","2    Aaron Andrews       2023-07-17          1    119.70 2025-05-21 674 days   \n","3     Aaron Archer       2023-02-25          1    276.96 2025-05-21 816 days   \n","4  Aaron Armstrong       2023-02-24          1   2300.65 2025-05-21 817 days   \n","\n","   R Score  F Score  M Score RFM Score Customer Segment  \n","0        5        2        5       525      Super Royal  \n","1        4        2        2       422           Member  \n","2        4        1        2       412           Member  \n","3        1        1        3       113    Uncategorized  \n","4        1        1        5       115    Uncategorized  "],"text/html":["\n","  <div id=\"df-de361b24-be2e-43de-b3e7-2a7cfc958a60\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Real Name</th>\n","      <th>Last_Transaction</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Today Date</th>\n","      <th>Recency</th>\n","      <th>R Score</th>\n","      <th>F Score</th>\n","      <th>M Score</th>\n","      <th>RFM Score</th>\n","      <th>Customer Segment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Aaron Adams</td>\n","      <td>2023-10-05</td>\n","      <td>2</td>\n","      <td>1173.85</td>\n","      <td>2025-05-21</td>\n","      <td>594 days</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>525</td>\n","      <td>Super Royal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aaron Allen</td>\n","      <td>2023-08-10</td>\n","      <td>2</td>\n","      <td>159.52</td>\n","      <td>2025-05-21</td>\n","      <td>650 days</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>422</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Aaron Andrews</td>\n","      <td>2023-07-17</td>\n","      <td>1</td>\n","      <td>119.70</td>\n","      <td>2025-05-21</td>\n","      <td>674 days</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>412</td>\n","      <td>Member</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Aaron Archer</td>\n","      <td>2023-02-25</td>\n","      <td>1</td>\n","      <td>276.96</td>\n","      <td>2025-05-21</td>\n","      <td>816 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>113</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Aaron Armstrong</td>\n","      <td>2023-02-24</td>\n","      <td>1</td>\n","      <td>2300.65</td>\n","      <td>2025-05-21</td>\n","      <td>817 days</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>Uncategorized</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de361b24-be2e-43de-b3e7-2a7cfc958a60')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de361b24-be2e-43de-b3e7-2a7cfc958a60 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de361b24-be2e-43de-b3e7-2a7cfc958a60');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9d5ca878-cf6b-4251-b58b-90d68d3d3352\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d5ca878-cf6b-4251-b58b-90d68d3d3352')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9d5ca878-cf6b-4251-b58b-90d68d3d3352 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rfm","summary":"{\n  \"name\": \"df_rfm\",\n  \"rows\": 39545,\n  \"fields\": [\n    {\n      \"column\": \"Real Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 39545,\n        \"samples\": [\n          \"Phillip Graham\",\n          \"Andrew Fields\",\n          \"Brent Rivera\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last_Transaction\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-01 00:00:00\",\n        \"max\": \"2023-10-14 00:00:00\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"2023-09-27 00:00:00\",\n          \"2023-04-19 00:00:00\",\n          \"2023-01-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 28,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2,\n          22,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 810.377892936966,\n        \"min\": 5.01,\n        \"max\": 19133.33,\n        \"num_unique_values\": 31021,\n        \"samples\": [\n          64.96,\n          198.78,\n          61.29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Today Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-05-21 00:00:00\",\n        \"max\": \"2025-05-21 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-05-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"timedelta64[ns]\",\n        \"num_unique_values\": 287,\n        \"samples\": [\n          \"602 days 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RFM Score\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"115\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Customer Segment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Member\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["df_rfm.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XFJMC4beE7sJ","executionInfo":{"status":"ok","timestamp":1747868439137,"user_tz":-420,"elapsed":99,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}},"outputId":"086543a7-5530-4774-e83d-b7bc343e285a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 39545 entries, 0 to 39544\n","Data columns (total 11 columns):\n"," #   Column            Non-Null Count  Dtype          \n","---  ------            --------------  -----          \n"," 0   Real Name         39545 non-null  object         \n"," 1   Last_Transaction  39545 non-null  datetime64[ns] \n"," 2   Frequency         39545 non-null  int64          \n"," 3   Monetary          39545 non-null  float64        \n"," 4   Today Date        39545 non-null  datetime64[ns] \n"," 5   Recency           39545 non-null  timedelta64[ns]\n"," 6   R Score           39545 non-null  int64          \n"," 7   F Score           39545 non-null  int64          \n"," 8   M Score           39545 non-null  int64          \n"," 9   RFM Score         39545 non-null  object         \n"," 10  Customer Segment  39545 non-null  object         \n","dtypes: datetime64[ns](2), float64(1), int64(4), object(3), timedelta64[ns](1)\n","memory usage: 3.3+ MB\n"]}]},{"cell_type":"code","source":["# Where is your data_path\n","data_path = '/content/drive/MyDrive/Dataset Dibimbing part 2/'\n","df_age_extract.to_csv(data_path + 'Customer_Transaction(1).csv', index = False)"],"metadata":{"id":"QTa_ma5NJrqw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Where is your data_path\n","data_path = '/content/drive/MyDrive/Dataset Dibimbing part 2/'\n","df_age_extract.to_csv(data_path + 'Customer_Transaction_New.csv', index = False)"],"metadata":{"id":"9GSj3ygu1R8v","executionInfo":{"status":"ok","timestamp":1751974761940,"user_tz":-420,"elapsed":615,"user":{"displayName":"15_Hanif Dwi Satria","userId":"01108093482802261048"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["# Where is your data_path\n","data_path = '/content/drive/MyDrive/Dataset Dibimbing part 2/'\n","df_rfm.to_csv(data_path + 'RFMTable(1).csv', index = False)"],"metadata":{"id":"meSOEPHVCpYs"},"execution_count":null,"outputs":[]}]}